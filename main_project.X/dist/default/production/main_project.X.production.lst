

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Mon Feb 06 16:21:24 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.40
    38                           ; Generated 01/12/2016 GMT
    39                           ; 
    40                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4620 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000C4C                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _screenMode
    77  000C4C  0002               	dw	2
    78                           
    79                           	psect	mediumconst
    80  00FE7E                     __pmediumconst:
    81                           	opt stack 0
    82  00FE7E  00                 	db	0
    83  00FE7F                     _keys:
    84                           	opt stack 0
    85  00FE7F  31                 	db	49
    86  00FE80  32                 	db	50
    87  00FE81  33                 	db	51
    88  00FE82  41                 	db	65
    89  00FE83  34                 	db	52
    90  00FE84  35                 	db	53
    91  00FE85  36                 	db	54
    92  00FE86  42                 	db	66
    93  00FE87  37                 	db	55
    94  00FE88  38                 	db	56
    95  00FE89  39                 	db	57
    96  00FE8A  43                 	db	67
    97  00FE8B  2A                 	db	42
    98  00FE8C  30                 	db	48
    99  00FE8D  23                 	db	35
   100  00FE8E  44                 	db	68
   101  00FE8F  00                 	db	0
   102  00FE90                     __end_of_keys:
   103                           	opt stack 0
   104  00FE90                     _dpowers:
   105                           	opt stack 0
   106  00FE90  0001               	dw	1
   107  00FE92  000A               	dw	10
   108  00FE94  0064               	dw	100
   109  00FE96  03E8               	dw	1000
   110  00FE98  2710               	dw	10000
   111  00FE9A                     __end_of_dpowers:
   112                           	opt stack 0
   113  00FE9A                     _hexpowers:
   114                           	opt stack 0
   115  00FE9A  0001               	dw	1
   116  00FE9C  0010               	dw	16
   117  00FE9E  0100               	dw	256
   118  00FEA0  1000               	dw	4096
   119  00FEA2                     __end_of_hexpowers:
   120                           	opt stack 0
   121  0000                     _TMR0	set	4054
   122  0000                     _ADCON0	set	4034
   123  0000                     _ADCON0bits	set	4034
   124  0000                     _ADCON1	set	4033
   125  0000                     _CMCONbits	set	4020
   126  0000                     _CVRCON	set	4021
   127  0000                     _INTCONbits	set	4082
   128  0000                     _LATA	set	3977
   129  0000                     _LATB	set	3978
   130  0000                     _LATC	set	3979
   131  0000                     _LATD	set	3980
   132  0000                     _LATDbits	set	3980
   133  0000                     _PORTB	set	3969
   134  0000                     _SSPADD	set	4040
   135  0000                     _SSPBUF	set	4041
   136  0000                     _SSPCON1	set	4038
   137  0000                     _SSPCON2	set	4037
   138  0000                     _SSPSTAT	set	4039
   139  0000                     _T0CON	set	4053
   140  0000                     _T0CONbits	set	4053
   141  0000                     _TRISA	set	3986
   142  0000                     _TRISB	set	3987
   143  0000                     _TRISC	set	3988
   144  0000                     _TRISD	set	3989
   145  0000                     _ACKDT	set	32301
   146  0000                     _ACKEN	set	32300
   147  0000                     _ADFM	set	32263
   148  0000                     _ADON	set	32272
   149  0000                     _GIE	set	32663
   150  0000                     _INT1IE	set	32643
   151  0000                     _INT1IF	set	32640
   152  0000                     _PEN	set	32298
   153  0000                     _RBIE	set	32659
   154  0000                     _RCEN	set	32299
   155  0000                     _SEN	set	32296
   156  0000                     _TMR0IE	set	32661
   157  0000                     _TMR0IF	set	32658
   158  0000                     _TRISC3	set	31907
   159  0000                     _TRISC4	set	31908
   160  00FEA2                     STR_9:
   161  00FEA2  25                 	db	37
   162  00FEA3  30                 	db	48	;'0'
   163  00FEA4  32                 	db	50	;'2'
   164  00FEA5  78                 	db	120	;'x'
   165  00FEA6  3A                 	db	58	;':'
   166  00FEA7  25                 	db	37
   167  00FEA8  30                 	db	48	;'0'
   168  00FEA9  32                 	db	50	;'2'
   169  00FEAA  78                 	db	120	;'x'
   170  00FEAB  20                 	db	32
   171  00FEAC  20                 	db	32
   172  00FEAD  20                 	db	32
   173  00FEAE  20                 	db	32
   174  00FEAF  20                 	db	32
   175  00FEB0  20                 	db	32
   176  00FEB1  20                 	db	32
   177  00FEB2  20                 	db	32
   178  00FEB3  20                 	db	32
   179  00FEB4  20                 	db	32
   180  00FEB5  20                 	db	32
   181  00FEB6  20                 	db	32
   182  00FEB7  20                 	db	32
   183  00FEB8  20                 	db	32
   184  00FEB9  20                 	db	32
   185  00FEBA  00                 	db	0
   186  00FEBB                     STR_20:
   187  00FEBB  44                 	db	68	;'D'
   188  00FEBC  41                 	db	65	;'A'
   189  00FEBD  54                 	db	84	;'T'
   190  00FEBE  45                 	db	69	;'E'
   191  00FEBF  3A                 	db	58	;':'
   192  00FEC0  20                 	db	32
   193  00FEC1  25                 	db	37
   194  00FEC2  30                 	db	48	;'0'
   195  00FEC3  32                 	db	50	;'2'
   196  00FEC4  78                 	db	120	;'x'
   197  00FEC5  2F                 	db	47
   198  00FEC6  25                 	db	37
   199  00FEC7  30                 	db	48	;'0'
   200  00FEC8  32                 	db	50	;'2'
   201  00FEC9  78                 	db	120	;'x'
   202  00FECA  2F                 	db	47
   203  00FECB  25                 	db	37
   204  00FECC  30                 	db	48	;'0'
   205  00FECD  32                 	db	50	;'2'
   206  00FECE  78                 	db	120	;'x'
   207  00FECF  20                 	db	32
   208  00FED0  20                 	db	32
   209  00FED1  00                 	db	0
   210  00FED2                     STR_21:
   211  00FED2  54                 	db	84	;'T'
   212  00FED3  49                 	db	73	;'I'
   213  00FED4  4D                 	db	77	;'M'
   214  00FED5  45                 	db	69	;'E'
   215  00FED6  3A                 	db	58	;':'
   216  00FED7  20                 	db	32
   217  00FED8  25                 	db	37
   218  00FED9  30                 	db	48	;'0'
   219  00FEDA  32                 	db	50	;'2'
   220  00FEDB  78                 	db	120	;'x'
   221  00FEDC  3A                 	db	58	;':'
   222  00FEDD  25                 	db	37
   223  00FEDE  30                 	db	48	;'0'
   224  00FEDF  32                 	db	50	;'2'
   225  00FEE0  78                 	db	120	;'x'
   226  00FEE1  3A                 	db	58	;':'
   227  00FEE2  25                 	db	37
   228  00FEE3  30                 	db	48	;'0'
   229  00FEE4  32                 	db	50	;'2'
   230  00FEE5  78                 	db	120	;'x'
   231  00FEE6  20                 	db	32
   232  00FEE7  20                 	db	32
   233  00FEE8  00                 	db	0
   234  00FEE9                     STR_15:
   235  00FEE9  42                 	db	66	;'B'
   236  00FEEA  41                 	db	65	;'A'
   237  00FEEB  54                 	db	84	;'T'
   238  00FEEC  54                 	db	84	;'T'
   239  00FEED  45                 	db	69	;'E'
   240  00FEEE  52                 	db	82	;'R'
   241  00FEEF  49                 	db	73	;'I'
   242  00FEF0  45                 	db	69	;'E'
   243  00FEF1  53                 	db	83	;'S'
   244  00FEF2  3A                 	db	58	;':'
   245  00FEF3  20                 	db	32
   246  00FEF4  25                 	db	37
   247  00FEF5  30                 	db	48	;'0'
   248  00FEF6  32                 	db	50	;'2'
   249  00FEF7  64                 	db	100	;'d'
   250  00FEF8  20                 	db	32
   251  00FEF9  20                 	db	32
   252  00FEFA  20                 	db	32
   253  00FEFB  20                 	db	32
   254  00FEFC  20                 	db	32
   255  00FEFD  00                 	db	0
   256  00FEFE                     STR_11:
   257  00FEFE  42                 	db	66	;'B'
   258  00FEFF  41                 	db	65	;'A'
   259  00FF00  54                 	db	84	;'T'
   260  00FF01  54                 	db	84	;'T'
   261  00FF02  45                 	db	69	;'E'
   262  00FF03  52                 	db	82	;'R'
   263  00FF04  49                 	db	73	;'I'
   264  00FF05  45                 	db	69	;'E'
   265  00FF06  53                 	db	83	;'S'
   266  00FF07  3A                 	db	58	;':'
   267  00FF08  20                 	db	32
   268  00FF09  25                 	db	37
   269  00FF0A  30                 	db	48	;'0'
   270  00FF0B  32                 	db	50	;'2'
   271  00FF0C  64                 	db	100	;'d'
   272  00FF0D  20                 	db	32
   273  00FF0E  20                 	db	32
   274  00FF0F  20                 	db	32
   275  00FF10  00                 	db	0
   276  00FF11                     STR_22:
   277  00FF11  30                 	db	48	;'0'
   278  00FF12  31                 	db	49	;'1'
   279  00FF13  32                 	db	50	;'2'
   280  00FF14  33                 	db	51	;'3'
   281  00FF15  34                 	db	52	;'4'
   282  00FF16  35                 	db	53	;'5'
   283  00FF17  36                 	db	54	;'6'
   284  00FF18  37                 	db	55	;'7'
   285  00FF19  38                 	db	56	;'8'
   286  00FF1A  39                 	db	57	;'9'
   287  00FF1B  61                 	db	97	;'a'
   288  00FF1C  62                 	db	98	;'b'
   289  00FF1D  63                 	db	99	;'c'
   290  00FF1E  64                 	db	100	;'d'
   291  00FF1F  65                 	db	101	;'e'
   292  00FF20  66                 	db	102	;'f'
   293  00FF21  00                 	db	0
   294  00FF22                     STR_5:
   295  00FF22  20                 	db	32
   296  00FF23  20                 	db	32
   297  00FF24  20                 	db	32
   298  00FF25  20                 	db	32
   299  00FF26  20                 	db	32
   300  00FF27  20                 	db	32
   301  00FF28  20                 	db	32
   302  00FF29  20                 	db	32
   303  00FF2A  20                 	db	32
   304  00FF2B  20                 	db	32
   305  00FF2C  20                 	db	32
   306  00FF2D  20                 	db	32
   307  00FF2E  20                 	db	32
   308  00FF2F  20                 	db	32
   309  00FF30  20                 	db	32
   310  00FF31  20                 	db	32
   311  00FF32  00                 	db	0
   312  00FF33                     STR_12:
   313  00FF33  23                 	db	35
   314  00FF34  20                 	db	32
   315  00FF35  4F                 	db	79	;'O'
   316  00FF36  46                 	db	70	;'F'
   317  00FF37  20                 	db	32
   318  00FF38  43                 	db	67	;'C'
   319  00FF39  20                 	db	32
   320  00FF3A  20                 	db	32
   321  00FF3B  20                 	db	32
   322  00FF3C  20                 	db	32
   323  00FF3D  20                 	db	32
   324  00FF3E  20                 	db	32
   325  00FF3F  20                 	db	32
   326  00FF40  20                 	db	32
   327  00FF41  20                 	db	32
   328  00FF42  20                 	db	32
   329  00FF43  00                 	db	0
   330  00FF44                     STR_16:
   331  00FF44  23                 	db	35
   332  00FF45  20                 	db	32
   333  00FF46  4F                 	db	79	;'O'
   334  00FF47  46                 	db	70	;'F'
   335  00FF48  20                 	db	32
   336  00FF49  41                 	db	65	;'A'
   337  00FF4A  41                 	db	65	;'A'
   338  00FF4B  20                 	db	32
   339  00FF4C  20                 	db	32
   340  00FF4D  20                 	db	32
   341  00FF4E  20                 	db	32
   342  00FF4F  20                 	db	32
   343  00FF50  20                 	db	32
   344  00FF51  20                 	db	32
   345  00FF52  20                 	db	32
   346  00FF53  20                 	db	32
   347  00FF54  00                 	db	0
   348  00FF55                     STR_14:
   349  00FF55  23                 	db	35
   350  00FF56  20                 	db	32
   351  00FF57  4F                 	db	79	;'O'
   352  00FF58  46                 	db	70	;'F'
   353  00FF59  20                 	db	32
   354  00FF5A  39                 	db	57	;'9'
   355  00FF5B  56                 	db	86	;'V'
   356  00FF5C  20                 	db	32
   357  00FF5D  20                 	db	32
   358  00FF5E  20                 	db	32
   359  00FF5F  20                 	db	32
   360  00FF60  20                 	db	32
   361  00FF61  20                 	db	32
   362  00FF62  20                 	db	32
   363  00FF63  20                 	db	32
   364  00FF64  20                 	db	32
   365  00FF65  00                 	db	0
   366  00FF66                     STR_4:
   367  00FF66  52                 	db	82	;'R'
   368  00FF67  55                 	db	85	;'U'
   369  00FF68  4E                 	db	78	;'N'
   370  00FF69  4E                 	db	78	;'N'
   371  00FF6A  49                 	db	73	;'I'
   372  00FF6B  4E                 	db	78	;'N'
   373  00FF6C  47                 	db	71	;'G'
   374  00FF6D  2E                 	db	46
   375  00FF6E  2E                 	db	46
   376  00FF6F  2E                 	db	46
   377  00FF70  20                 	db	32
   378  00FF71  20                 	db	32
   379  00FF72  20                 	db	32
   380  00FF73  20                 	db	32
   381  00FF74  20                 	db	32
   382  00FF75  20                 	db	32
   383  00FF76  00                 	db	0
   384  00FF77                     STR_10:
   385  00FF77  54                 	db	84	;'T'
   386  00FF78  4F                 	db	79	;'O'
   387  00FF79  54                 	db	84	;'T'
   388  00FF7A  41                 	db	65	;'A'
   389  00FF7B  4C                 	db	76	;'L'
   390  00FF7C  20                 	db	32
   391  00FF7D  23                 	db	35
   392  00FF7E  20                 	db	32
   393  00FF7F  4F                 	db	79	;'O'
   394  00FF80  46                 	db	70	;'F'
   395  00FF81  20                 	db	32
   396  00FF82  20                 	db	32
   397  00FF83  20                 	db	32
   398  00FF84  20                 	db	32
   399  00FF85  20                 	db	32
   400  00FF86  20                 	db	32
   401  00FF87  00                 	db	0
   402  00FF88                     STR_7:
   403  00FF88  54                 	db	84	;'T'
   404  00FF89  4F                 	db	79	;'O'
   405  00FF8A  20                 	db	32
   406  00FF8B  43                 	db	67	;'C'
   407  00FF8C  4F                 	db	79	;'O'
   408  00FF8D  4E                 	db	78	;'N'
   409  00FF8E  54                 	db	84	;'T'
   410  00FF8F  49                 	db	73	;'I'
   411  00FF90  4E                 	db	78	;'N'
   412  00FF91  55                 	db	85	;'U'
   413  00FF92  45                 	db	69	;'E'
   414  00FF93  20                 	db	32
   415  00FF94  20                 	db	32
   416  00FF95  20                 	db	32
   417  00FF96  20                 	db	32
   418  00FF97  20                 	db	32
   419  00FF98  00                 	db	0
   420  00FF99                     STR_18:
   421  00FF99  23                 	db	35
   422  00FF9A  20                 	db	32
   423  00FF9B  4F                 	db	79	;'O'
   424  00FF9C  46                 	db	70	;'F'
   425  00FF9D  20                 	db	32
   426  00FF9E  44                 	db	68	;'D'
   427  00FF9F  52                 	db	82	;'R'
   428  00FFA0  41                 	db	65	;'A'
   429  00FFA1  49                 	db	73	;'I'
   430  00FFA2  4E                 	db	78	;'N'
   431  00FFA3  45                 	db	69	;'E'
   432  00FFA4  44                 	db	68	;'D'
   433  00FFA5  20                 	db	32
   434  00FFA6  20                 	db	32
   435  00FFA7  20                 	db	32
   436  00FFA8  20                 	db	32
   437  00FFA9  00                 	db	0
   438  00FFAA                     STR_6:
   439  00FFAA  44                 	db	68	;'D'
   440  00FFAB  4F                 	db	79	;'O'
   441  00FFAC  4E                 	db	78	;'N'
   442  00FFAD  45                 	db	69	;'E'
   443  00FFAE  21                 	db	33
   444  00FFAF  20                 	db	32
   445  00FFB0  50                 	db	80	;'P'
   446  00FFB1  52                 	db	82	;'R'
   447  00FFB2  45                 	db	69	;'E'
   448  00FFB3  53                 	db	83	;'S'
   449  00FFB4  53                 	db	83	;'S'
   450  00FFB5  20                 	db	32
   451  00FFB6  2A                 	db	42
   452  00FFB7  20                 	db	32
   453  00FFB8  20                 	db	32
   454  00FFB9  20                 	db	32
   455  00FFBA  00                 	db	0
   456  00FFBB                     STR_8:
   457  00FFBB  54                 	db	84	;'T'
   458  00FFBC  4F                 	db	79	;'O'
   459  00FFBD  54                 	db	84	;'T'
   460  00FFBE  41                 	db	65	;'A'
   461  00FFBF  4C                 	db	76	;'L'
   462  00FFC0  20                 	db	32
   463  00FFC1  52                 	db	82	;'R'
   464  00FFC2  55                 	db	85	;'U'
   465  00FFC3  4E                 	db	78	;'N'
   466  00FFC4  20                 	db	32
   467  00FFC5  54                 	db	84	;'T'
   468  00FFC6  49                 	db	73	;'I'
   469  00FFC7  4D                 	db	77	;'M'
   470  00FFC8  45                 	db	69	;'E'
   471  00FFC9  3A                 	db	58	;':'
   472  00FFCA  20                 	db	32
   473  00FFCB  00                 	db	0
   474  00FFCC                     STR_3:
   475  00FFCC  20                 	db	32
   476  00FFCD  3C                 	db	60	;'<'
   477  00FFCE  34                 	db	52	;'4'
   478  00FFCF  20                 	db	32
   479  00FFD0  20                 	db	32
   480  00FFD1  20                 	db	32
   481  00FFD2  44                 	db	68	;'D'
   482  00FFD3  41                 	db	65	;'A'
   483  00FFD4  54                 	db	84	;'T'
   484  00FFD5  41                 	db	65	;'A'
   485  00FFD6  20                 	db	32
   486  00FFD7  20                 	db	32
   487  00FFD8  20                 	db	32
   488  00FFD9  36                 	db	54	;'6'
   489  00FFDA  3E                 	db	62	;'>'
   490  00FFDB  20                 	db	32
   491  00FFDC  00                 	db	0
   492  00FFDD                     STR_1:
   493  00FFDD  53                 	db	83	;'S'
   494  00FFDE  54                 	db	84	;'T'
   495  00FFDF  41                 	db	65	;'A'
   496  00FFE0  52                 	db	82	;'R'
   497  00FFE1  54                 	db	84	;'T'
   498  00FFE2  3A                 	db	58	;':'
   499  00FFE3  20                 	db	32
   500  00FFE4  20                 	db	32
   501  00FFE5  20                 	db	32
   502  00FFE6  50                 	db	80	;'P'
   503  00FFE7  52                 	db	82	;'R'
   504  00FFE8  45                 	db	69	;'E'
   505  00FFE9  53                 	db	83	;'S'
   506  00FFEA  53                 	db	83	;'S'
   507  00FFEB  20                 	db	32
   508  00FFEC  2A                 	db	42
   509  00FFED  00                 	db	0
   510  00FFEE                     STR_2:
   511  00FFEE  3C                 	db	60	;'<'
   512  00FFEF  20                 	db	32
   513  00FFF0  34                 	db	52	;'4'
   514  00FFF1  20                 	db	32
   515  00FFF2  20                 	db	32
   516  00FFF3  20                 	db	32
   517  00FFF4  44                 	db	68	;'D'
   518  00FFF5  41                 	db	65	;'A'
   519  00FFF6  54                 	db	84	;'T'
   520  00FFF7  41                 	db	65	;'A'
   521  00FFF8  20                 	db	32
   522  00FFF9  20                 	db	32
   523  00FFFA  20                 	db	32
   524  00FFFB  36                 	db	54	;'6'
   525  00FFFC  20                 	db	32
   526  00FFFD  3E                 	db	62	;'>'
   527  00FFFE  00                 	db	0
   528  0000                     
   529                           ; #config settings
   530  00FFFF  00                 	db	0	; dummy byte at the end
   531  0000                     
   532                           	psect	cinit
   533  000B6C                     __pcinit:
   534                           	opt stack 0
   535  000B6C                     start_initialization:
   536                           	opt stack 0
   537  000B6C                     __initialization:
   538                           	opt stack 0
   539                           
   540                           ; Initialize objects allocated to COMRAM (2 bytes)
   541                           ; load TBLPTR registers with __pidataCOMRAM
   542  000B6C  0E4C               	movlw	low __pidataCOMRAM
   543  000B6E  6EF6               	movwf	tblptrl,c
   544  000B70  0E0C               	movlw	high __pidataCOMRAM
   545  000B72  6EF7               	movwf	tblptrh,c
   546  000B74  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   547  000B76  6EF8               	movwf	tblptru,c
   548  000B78  0009               	tblrd		*+	;fetch initializer
   549  000B7A  CFF5 F059          	movff	tablat,__pdataCOMRAM
   550  000B7E  0009               	tblrd		*+	;fetch initializer
   551  000B80  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
   552                           
   553                           ; Clear objects allocated to COMRAM (32 bytes)
   554  000B84  EE00  F039         	lfsr	0,__pbssCOMRAM
   555  000B88  0E20               	movlw	32
   556  000B8A                     clear_0:
   557  000B8A  6AEE               	clrf	postinc0,c
   558  000B8C  06E8               	decf	wreg,f,c
   559  000B8E  E1FD               	bnz	clear_0
   560  000B90                     end_of_initialization:
   561                           	opt stack 0
   562  000B90                     __end_of__initialization:
   563                           	opt stack 0
   564  000B90  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   565  000B92  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   566  000B94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   567  000B96  6EF8               	movwf	tblptru,c
   568  000B98  0100               	movlb	0
   569  000B9A  EF27  F002         	goto	_main	;jump to C main() function
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           
   577                           	psect	bssCOMRAM
   578  000039                     __pbssCOMRAM:
   579                           	opt stack 0
   580  000039                     _time:
   581                           	opt stack 0
   582  000039                     	ds	7
   583  000040                     _doneTimer:
   584                           	opt stack 0
   585  000040                     	ds	2
   586  000042                     _min:
   587                           	opt stack 0
   588  000042                     	ds	2
   589  000044                     _opTimer:
   590                           	opt stack 0
   591  000044                     	ds	2
   592  000046                     _runMin:
   593                           	opt stack 0
   594  000046                     	ds	2
   595  000048                     _runSec:
   596                           	opt stack 0
   597  000048                     	ds	2
   598  00004A                     _sec:
   599                           	opt stack 0
   600  00004A                     	ds	2
   601  00004C                     _solOffTimer:
   602                           	opt stack 0
   603  00004C                     	ds	2
   604  00004E                     _solOnTimer:
   605                           	opt stack 0
   606  00004E                     	ds	2
   607  000050                     _count9V:
   608                           	opt stack 0
   609  000050                     	ds	1
   610  000051                     _countAA:
   611                           	opt stack 0
   612  000051                     	ds	1
   613  000052                     _countC:
   614                           	opt stack 0
   615  000052                     	ds	1
   616  000053                     _countDrain:
   617                           	opt stack 0
   618  000053                     	ds	1
   619  000054                     _num9V:
   620                           	opt stack 0
   621  000054                     	ds	1
   622  000055                     _numAA:
   623                           	opt stack 0
   624  000055                     	ds	1
   625  000056                     _numBats:
   626                           	opt stack 0
   627  000056                     	ds	1
   628  000057                     _numC:
   629                           	opt stack 0
   630  000057                     	ds	1
   631  000058                     _numDrain:
   632                           	opt stack 0
   633  000058                     	ds	1
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           
   641                           	psect	dataCOMRAM
   642  000059                     __pdataCOMRAM:
   643                           	opt stack 0
   644  000059                     _screenMode:
   645                           	opt stack 0
   646  000059                     	ds	2
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           
   654                           	psect	cstackBANK0
   655  000080                     __pcstackBANK0:
   656                           	opt stack 0
   657  000080                     ??_printf:
   658  000080                     ??_I2C_Master_Init:
   659                           
   660                           ; 1 bytes @ 0x0
   661  000080                     	ds	4
   662  000084                     printf@idx:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x4
   666  000084                     	ds	1
   667  000085                     printf@ap:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x5
   671  000085                     	ds	2
   672  000087                     printf@prec:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x7
   676  000087                     	ds	1
   677  000088                     printf@val:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x8
   681  000088                     	ds	2
   682  00008A                     printf@flag:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0xA
   686  00008A                     	ds	1
   687  00008B                     printf@width:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0xB
   691  00008B                     	ds	2
   692  00008D                     printf@c:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0xD
   696  00008D                     	ds	1
   697  00008E                     ??_main:
   698                           
   699                           ; 1 bytes @ 0xE
   700  00008E                     	ds	1
   701  00008F                     main@i_394:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0xF
   705  00008F                     	ds	1
   706  000090                     main@i:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x10
   710  000090                     	ds	1
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           
   718                           	psect	cstackCOMRAM
   719  000001                     __pcstackCOMRAM:
   720                           	opt stack 0
   721  000001                     switchMenu@right:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x0
   725  000001                     	ds	1
   726  000002                     switchMenu@key:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x1
   730  000002                     	ds	1
   731  000003                     switchMenu@left:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x2
   735  000003                     	ds	1
   736  000004                     ??_highISR:
   737                           
   738                           ; 1 bytes @ 0x3
   739  000004                     	ds	14
   740  000012                     _highISR$422:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x11
   744  000012                     	ds	1
   745  000013                     highISR@keypress:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x12
   749  000013                     	ds	1
   750  000014                     ??_lowISR:
   751                           
   752                           ; 1 bytes @ 0x13
   753  000014                     	ds	17
   754  000025                     ??_isdigit:
   755  000025                     ??_I2C_Master_Wait:
   756  000025                     ?___wmul:
   757                           	opt stack 0
   758  000025                     ?___lwdiv:
   759                           	opt stack 0
   760  000025                     ?___lldiv:
   761                           	opt stack 0
   762  000025                     lcdNibble@temp:
   763                           	opt stack 0
   764  000025                     ___wmul@multiplier:
   765                           	opt stack 0
   766  000025                     ___lwdiv@dividend:
   767                           	opt stack 0
   768  000025                     ___lldiv@dividend:
   769                           	opt stack 0
   770                           
   771                           ; 4 bytes @ 0x24
   772  000025                     	ds	1
   773  000026                     I2C_Master_Read@a:
   774                           	opt stack 0
   775  000026                     lcdNibble@data:
   776                           	opt stack 0
   777  000026                     _isdigit$674:
   778                           	opt stack 0
   779  000026                     I2C_Master_Write@d:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x25
   783  000026                     	ds	1
   784  000027                     I2C_Master_Read@temp:
   785                           	opt stack 0
   786  000027                     lcdInst@data:
   787                           	opt stack 0
   788  000027                     putch@data:
   789                           	opt stack 0
   790  000027                     isdigit@c:
   791                           	opt stack 0
   792  000027                     ___wmul@multiplicand:
   793                           	opt stack 0
   794  000027                     ___lwdiv@divisor:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x26
   798  000027                     	ds	1
   799  000028                     ??_initLCD:
   800                           
   801                           ; 1 bytes @ 0x27
   802  000028                     	ds	1
   803  000029                     ___lwdiv@counter:
   804                           	opt stack 0
   805  000029                     ___wmul@product:
   806                           	opt stack 0
   807  000029                     ___lldiv@divisor:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x28
   811  000029                     	ds	1
   812  00002A                     ___lwdiv@quotient:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x29
   816  00002A                     	ds	2
   817  00002C                     ?___lwmod:
   818                           	opt stack 0
   819  00002C                     ___lwmod@dividend:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x2B
   823  00002C                     	ds	1
   824  00002D                     ___lldiv@quotient:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x2C
   828  00002D                     	ds	1
   829  00002E                     ___lwmod@divisor:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x2D
   833  00002E                     	ds	2
   834  000030                     ___lwmod@counter:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x2F
   838  000030                     	ds	1
   839  000031                     ?_printf:
   840                           	opt stack 0
   841  000031                     ___lldiv@counter:
   842                           	opt stack 0
   843  000031                     printf@f:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x30
   847  000031                     	ds	1
   848  000032                     I2C_Master_Init@c:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x31
   852  000032                     	ds	7
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           
   860 ;;
   861 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   862 ;;
   863 ;; *************** function _main *****************
   864 ;; Defined at:
   865 ;;		line 25 in file "../main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  i               1   15[BANK0 ] unsigned char 
   870 ;;  i               1   16[BANK0 ] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:        3 bytes
   885 ;; Hardware stack levels required when called:    6
   886 ;; This function calls:
   887 ;;		_I2C_Master_Init
   888 ;;		_I2C_Master_Read
   889 ;;		_I2C_Master_Start
   890 ;;		_I2C_Master_Stop
   891 ;;		_I2C_Master_Write
   892 ;;		_initLCD
   893 ;;		_lcdInst
   894 ;;		_printf
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text0
   901  00044E                     __ptext0:
   902                           	opt stack 0
   903  00044E                     _main:
   904                           	opt stack 25
   905                           
   906                           ;main.c: 26: TRISA = 0xFF;
   907                           
   908                           ;incstack = 0
   909  00044E  6892               	setf	3986,c	;volatile
   910                           
   911                           ;main.c: 27: TRISC = 0x00;
   912  000450  0E00               	movlw	0
   913  000452  6E94               	movwf	3988,c	;volatile
   914                           
   915                           ;main.c: 28: TRISD = 0x00;
   916  000454  0E00               	movlw	0
   917  000456  6E95               	movwf	3989,c	;volatile
   918                           
   919                           ;main.c: 29: TRISB = 0xFF;
   920  000458  6893               	setf	3987,c	;volatile
   921                           
   922                           ;main.c: 30: LATA = 0x00;
   923  00045A  0E00               	movlw	0
   924  00045C  6E89               	movwf	3977,c	;volatile
   925                           
   926                           ;main.c: 31: LATB = 0x00;
   927  00045E  0E00               	movlw	0
   928  000460  6E8A               	movwf	3978,c	;volatile
   929                           
   930                           ;main.c: 32: LATC = 0x00;
   931  000462  0E00               	movlw	0
   932  000464  6E8B               	movwf	3979,c	;volatile
   933                           
   934                           ;main.c: 33: ADCON0 = 0x00;
   935  000466  0E00               	movlw	0
   936  000468  6EC2               	movwf	4034,c	;volatile
   937                           
   938                           ;main.c: 34: ADCON1 = 0xFF;
   939  00046A  68C1               	setf	4033,c	;volatile
   940                           
   941                           ;main.c: 36: ADCON1 = 0x0B;
   942  00046C  0E0B               	movlw	11
   943  00046E  6EC1               	movwf	4033,c	;volatile
   944                           
   945                           ;main.c: 37: CVRCON = 0x00;
   946  000470  0E00               	movlw	0
   947  000472  6EB5               	movwf	4021,c	;volatile
   948                           
   949                           ;main.c: 38: CMCONbits.CIS = 0;
   950  000474  96B4               	bcf	4020,3,c	;volatile
   951                           
   952                           ;main.c: 39: ADFM = 1;
   953  000476  8EC0               	bsf	4032,7,c	;volatile
   954                           
   955                           ;main.c: 52: GIE = 1;
   956  000478  8EF2               	bsf	intcon,7,c	;volatile
   957                           
   958                           ;main.c: 53: INT1IE = 1;
   959  00047A  86F0               	bsf	intcon3,3,c	;volatile
   960                           
   961                           ;main.c: 54: INT1IF = 0;
   962  00047C  90F0               	bcf	intcon3,0,c	;volatile
   963                           
   964                           ;main.c: 55: RBIE = 0;
   965  00047E  96F2               	bcf	intcon,3,c	;volatile
   966                           
   967                           ;main.c: 56: TMR0IE = 1;
   968  000480  8AF2               	bsf	intcon,5,c	;volatile
   969                           
   970                           ;main.c: 57: TMR0IF = 0;
   971  000482  94F2               	bcf	intcon,2,c	;volatile
   972                           
   973                           ;main.c: 61: T0CON = 0b01000111;
   974  000484  0E47               	movlw	71
   975  000486  6ED5               	movwf	4053,c	;volatile
   976                           
   977                           ;main.c: 76: initLCD();
   978  000488  EC72  F005         	call	_initLCD	;wreg free
   979                           
   980                           ;main.c: 78: I2C_Master_Init(10000);
   981  00048C  0E10               	movlw	16
   982  00048E  6E32               	movwf	I2C_Master_Init@c,c
   983  000490  0E27               	movlw	39
   984  000492  6E33               	movwf	I2C_Master_Init@c+1,c
   985  000494  0E00               	movlw	0
   986  000496  6E34               	movwf	I2C_Master_Init@c+2,c
   987  000498  0E00               	movlw	0
   988  00049A  6E35               	movwf	I2C_Master_Init@c+3,c
   989  00049C  ECD0  F004         	call	_I2C_Master_Init	;wreg free
   990                           
   991                           ;main.c: 79: (INTCONbits.GIE = 1);
   992  0004A0  8EF2               	bsf	intcon,7,c	;volatile
   993                           
   994                           ;main.c: 82: while (screenMode == 2){
   995                           
   996                           ;main.c: 81: while (1) {
   997  0004A2  D052               	goto	l2280
   998  0004A4                     l180:
   999                           
  1000                           ;main.c: 83: (INTCONbits.GIE = 0);
  1001  0004A4  9EF2               	bcf	intcon,7,c	;volatile
  1002                           
  1003                           ;main.c: 84: lcdInst(0b10000000);;
  1004  0004A6  0E80               	movlw	128
  1005  0004A8  EC13  F006         	call	_lcdInst
  1006                           
  1007                           ;main.c: 85: printf("START:   PRESS *");
  1008  0004AC  0EDD               	movlw	low STR_1
  1009  0004AE  6E31               	movwf	printf@f,c
  1010  0004B0  0EFF               	movlw	high STR_1
  1011  0004B2  6E32               	movwf	printf@f+1,c
  1012  0004B4  EC55  F000         	call	_printf	;wreg free
  1013                           
  1014                           ;main.c: 86: lcdInst(0b11000000);;
  1015  0004B8  0EC0               	movlw	192
  1016  0004BA  EC13  F006         	call	_lcdInst
  1017                           
  1018                           ;main.c: 87: printf("< 4   DATA   6 >");
  1019  0004BE  0EEE               	movlw	low STR_2
  1020  0004C0  6E31               	movwf	printf@f,c
  1021  0004C2  0EFF               	movlw	high STR_2
  1022  0004C4  6E32               	movwf	printf@f+1,c
  1023  0004C6  EC55  F000         	call	_printf	;wreg free
  1024                           
  1025                           ;main.c: 88: (INTCONbits.GIE = 1);
  1026  0004CA  8EF2               	bsf	intcon,7,c	;volatile
  1027                           
  1028                           ;main.c: 89: unsigned char i;
  1029                           ;main.c: 90: for(i=0;i<50;i++){
  1030  0004CC  0E00               	movlw	0
  1031  0004CE  0100               	movlb	0	; () banked
  1032  0004D0  6F90               	movwf	main@i& (0+255),b
  1033  0004D2                     l2250:
  1034                           
  1035                           ; BSR set to: 0
  1036  0004D2  0E31               	movlw	49
  1037  0004D4  0100               	movlb	0	; () banked
  1038  0004D6  6590               	cpfsgt	main@i& (0+255),b
  1039  0004D8  D001               	goto	l2254
  1040  0004DA  D011               	goto	l2262
  1041  0004DC                     l2254:
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 91: if (screenMode != 2)
  1045  0004DC  0E02               	movlw	2
  1046  0004DE  1859               	xorwf	_screenMode,w,c
  1047  0004E0  105A               	iorwf	_screenMode+1,w,c
  1048  0004E2  A4D8               	btfss	status,2,c
  1049  0004E4  D00C               	goto	l2262
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;main.c: 93: _delay((unsigned long)((10)*(10000000/4000.0)));
  1053                           
  1054                           ; BSR set to: 0
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;main.c: 92: break;
  1058  0004E6  0E21               	movlw	33
  1059  0004E8  0100               	movlb	0	; () banked
  1060  0004EA  6F8E               	movwf	??_main& (0+255),b
  1061  0004EC  0E76               	movlw	118
  1062  0004EE                     u1997:
  1063  0004EE  2EE8               	decfsz	wreg,f,c
  1064  0004F0  D7FE               	bra	u1997
  1065  0004F2  2F8E               	decfsz	??_main& (0+255),f,b
  1066  0004F4  D7FC               	bra	u1997
  1067  0004F6  F000               	nop	
  1068  0004F8  0100               	movlb	0	; () banked
  1069  0004FA  2B90               	incf	main@i& (0+255),f,b
  1070  0004FC  D7EA               	goto	l2250
  1071  0004FE                     l2262:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;main.c: 94: }
  1075                           ;main.c: 95: lcdInst(0b10000000);;
  1076  0004FE  0E80               	movlw	128
  1077  000500  EC13  F006         	call	_lcdInst
  1078                           
  1079                           ;main.c: 96: lcdInst(0b11000000);;
  1080  000504  0EC0               	movlw	192
  1081  000506  EC13  F006         	call	_lcdInst
  1082                           
  1083                           ;main.c: 97: printf(" <4   DATA   6> ");
  1084  00050A  0ECC               	movlw	low STR_3
  1085  00050C  6E31               	movwf	printf@f,c
  1086  00050E  0EFF               	movlw	high STR_3
  1087  000510  6E32               	movwf	printf@f+1,c
  1088  000512  EC55  F000         	call	_printf	;wreg free
  1089                           
  1090                           ;main.c: 98: for(i=0;i<50;i++){
  1091  000516  0E00               	movlw	0
  1092  000518  0100               	movlb	0	; () banked
  1093  00051A  6F90               	movwf	main@i& (0+255),b
  1094  00051C                     l2268:
  1095                           
  1096                           ; BSR set to: 0
  1097  00051C  0E31               	movlw	49
  1098  00051E  0100               	movlb	0	; () banked
  1099  000520  6590               	cpfsgt	main@i& (0+255),b
  1100  000522  D001               	goto	l2272
  1101  000524  D011               	goto	l2280
  1102  000526                     l2272:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;main.c: 99: if (screenMode != 2)
  1106  000526  0E02               	movlw	2
  1107  000528  1859               	xorwf	_screenMode,w,c
  1108  00052A  105A               	iorwf	_screenMode+1,w,c
  1109  00052C  A4D8               	btfss	status,2,c
  1110  00052E  D00C               	goto	l2280
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;main.c: 101: _delay((unsigned long)((10)*(10000000/4000.0)));
  1114                           
  1115                           ; BSR set to: 0
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;main.c: 100: break;
  1119  000530  0E21               	movlw	33
  1120  000532  0100               	movlb	0	; () banked
  1121  000534  6F8E               	movwf	??_main& (0+255),b
  1122  000536  0E76               	movlw	118
  1123  000538                     u2007:
  1124  000538  2EE8               	decfsz	wreg,f,c
  1125  00053A  D7FE               	bra	u2007
  1126  00053C  2F8E               	decfsz	??_main& (0+255),f,b
  1127  00053E  D7FC               	bra	u2007
  1128  000540  F000               	nop	
  1129  000542  0100               	movlb	0	; () banked
  1130  000544  2B90               	incf	main@i& (0+255),f,b
  1131  000546  D7EA               	goto	l2268
  1132  000548                     l2280:
  1133  000548  0E02               	movlw	2
  1134  00054A  1859               	xorwf	_screenMode,w,c
  1135  00054C  105A               	iorwf	_screenMode+1,w,c
  1136  00054E  A4D8               	btfss	status,2,c
  1137  000550  D013               	goto	l2288
  1138  000552  D7A8               	goto	l180
  1139  000554                     l2282:
  1140                           
  1141                           ;main.c: 105: lcdInst(0b10000000);;
  1142  000554  0E80               	movlw	128
  1143  000556  EC13  F006         	call	_lcdInst
  1144                           
  1145                           ;main.c: 106: printf("RUNNING...      ");
  1146  00055A  0E66               	movlw	low STR_4
  1147  00055C  6E31               	movwf	printf@f,c
  1148  00055E  0EFF               	movlw	high STR_4
  1149  000560  6E32               	movwf	printf@f+1,c
  1150  000562  EC55  F000         	call	_printf	;wreg free
  1151                           
  1152                           ;main.c: 107: lcdInst(0b11000000);;
  1153  000566  0EC0               	movlw	192
  1154  000568  EC13  F006         	call	_lcdInst
  1155                           
  1156                           ;main.c: 108: printf("                ");
  1157  00056C  0E22               	movlw	low STR_5
  1158  00056E  6E31               	movwf	printf@f,c
  1159  000570  0EFF               	movlw	high STR_5
  1160  000572  6E32               	movwf	printf@f+1,c
  1161  000574  EC55  F000         	call	_printf	;wreg free
  1162  000578                     l2288:
  1163  000578  0459               	decf	_screenMode,w,c
  1164  00057A  105A               	iorwf	_screenMode+1,w,c
  1165  00057C  A4D8               	btfss	status,2,c
  1166  00057E  D013               	goto	l2296
  1167  000580  D7E9               	goto	l2282
  1168  000582                     l2290:
  1169                           
  1170                           ;main.c: 128: lcdInst(0b10000000);;
  1171  000582  0E80               	movlw	128
  1172  000584  EC13  F006         	call	_lcdInst
  1173                           
  1174                           ;main.c: 129: printf("DONE! PRESS *   ");
  1175  000588  0EAA               	movlw	low STR_6
  1176  00058A  6E31               	movwf	printf@f,c
  1177  00058C  0EFF               	movlw	high STR_6
  1178  00058E  6E32               	movwf	printf@f+1,c
  1179  000590  EC55  F000         	call	_printf	;wreg free
  1180                           
  1181                           ;main.c: 130: lcdInst(0b11000000);;
  1182  000594  0EC0               	movlw	192
  1183  000596  EC13  F006         	call	_lcdInst
  1184                           
  1185                           ;main.c: 131: printf("TO CONTINUE     ");
  1186  00059A  0E88               	movlw	low STR_7
  1187  00059C  6E31               	movwf	printf@f,c
  1188  00059E  0EFF               	movlw	high STR_7
  1189  0005A0  6E32               	movwf	printf@f+1,c
  1190  0005A2  EC55  F000         	call	_printf	;wreg free
  1191  0005A6                     l2296:
  1192  0005A6  5059               	movf	_screenMode,w,c
  1193  0005A8  105A               	iorwf	_screenMode+1,w,c
  1194  0005AA  A4D8               	btfss	status,2,c
  1195  0005AC  D01D               	goto	l2306
  1196  0005AE  D7E9               	goto	l2290
  1197  0005B0                     l195:
  1198                           
  1199                           ;main.c: 134: (INTCONbits.GIE = 0);
  1200  0005B0  9EF2               	bcf	intcon,7,c	;volatile
  1201                           
  1202                           ;main.c: 135: lcdInst(0b10000000);;
  1203  0005B2  0E80               	movlw	128
  1204  0005B4  EC13  F006         	call	_lcdInst
  1205                           
  1206                           ;main.c: 136: printf("TOTAL RUN TIME: ");
  1207  0005B8  0EBB               	movlw	low STR_8
  1208  0005BA  6E31               	movwf	printf@f,c
  1209  0005BC  0EFF               	movlw	high STR_8
  1210  0005BE  6E32               	movwf	printf@f+1,c
  1211  0005C0  EC55  F000         	call	_printf	;wreg free
  1212                           
  1213                           ;main.c: 137: lcdInst(0b11000000);;
  1214  0005C4  0EC0               	movlw	192
  1215  0005C6  EC13  F006         	call	_lcdInst
  1216                           
  1217                           ;main.c: 138: printf("%02x:%02x               ", min, sec);
  1218  0005CA  0EA2               	movlw	low STR_9
  1219  0005CC  6E31               	movwf	printf@f,c
  1220  0005CE  0EFE               	movlw	high STR_9
  1221  0005D0  6E32               	movwf	printf@f+1,c
  1222  0005D2  C042  F033         	movff	_min,?_printf+2
  1223  0005D6  C043  F034         	movff	_min+1,?_printf+3
  1224  0005DA  C04A  F035         	movff	_sec,?_printf+4
  1225  0005DE  C04B  F036         	movff	_sec+1,?_printf+5
  1226  0005E2  EC55  F000         	call	_printf	;wreg free
  1227                           
  1228                           ;main.c: 139: (INTCONbits.GIE = 1);
  1229  0005E6  8EF2               	bsf	intcon,7,c	;volatile
  1230  0005E8                     l2306:
  1231  0005E8  0E03               	movlw	3
  1232  0005EA  1859               	xorwf	_screenMode,w,c
  1233  0005EC  105A               	iorwf	_screenMode+1,w,c
  1234  0005EE  A4D8               	btfss	status,2,c
  1235  0005F0  D018               	goto	l2316
  1236  0005F2  D7DE               	goto	l195
  1237  0005F4                     l198:
  1238                           
  1239                           ;main.c: 142: (INTCONbits.GIE = 0);
  1240  0005F4  9EF2               	bcf	intcon,7,c	;volatile
  1241                           
  1242                           ;main.c: 143: lcdInst(0b10000000);;
  1243  0005F6  0E80               	movlw	128
  1244  0005F8  EC13  F006         	call	_lcdInst
  1245                           
  1246                           ;main.c: 144: printf("TOTAL # OF      ");
  1247  0005FC  0E77               	movlw	low STR_10
  1248  0005FE  6E31               	movwf	printf@f,c
  1249  000600  0EFF               	movlw	high STR_10
  1250  000602  6E32               	movwf	printf@f+1,c
  1251  000604  EC55  F000         	call	_printf	;wreg free
  1252                           
  1253                           ;main.c: 145: lcdInst(0b11000000);;
  1254  000608  0EC0               	movlw	192
  1255  00060A  EC13  F006         	call	_lcdInst
  1256                           
  1257                           ;main.c: 146: printf("BATTERIES: %02d   ", numBats);
  1258  00060E  0EFE               	movlw	low STR_11
  1259  000610  6E31               	movwf	printf@f,c
  1260  000612  0EFE               	movlw	high STR_11
  1261  000614  6E32               	movwf	printf@f+1,c
  1262  000616  C056  F033         	movff	_numBats,?_printf+2
  1263  00061A  6A34               	clrf	?_printf+3,c
  1264  00061C  EC55  F000         	call	_printf	;wreg free
  1265                           
  1266                           ;main.c: 147: (INTCONbits.GIE = 1);
  1267  000620  8EF2               	bsf	intcon,7,c	;volatile
  1268  000622                     l2316:
  1269  000622  0E04               	movlw	4
  1270  000624  1859               	xorwf	_screenMode,w,c
  1271  000626  105A               	iorwf	_screenMode+1,w,c
  1272  000628  A4D8               	btfss	status,2,c
  1273  00062A  D018               	goto	l2326
  1274  00062C  D7E3               	goto	l198
  1275  00062E                     l201:
  1276                           
  1277                           ;main.c: 150: (INTCONbits.GIE = 0);
  1278  00062E  9EF2               	bcf	intcon,7,c	;volatile
  1279                           
  1280                           ;main.c: 151: lcdInst(0b10000000);;
  1281  000630  0E80               	movlw	128
  1282  000632  EC13  F006         	call	_lcdInst
  1283                           
  1284                           ;main.c: 152: printf("# OF C          ");
  1285  000636  0E33               	movlw	low STR_12
  1286  000638  6E31               	movwf	printf@f,c
  1287  00063A  0EFF               	movlw	high STR_12
  1288  00063C  6E32               	movwf	printf@f+1,c
  1289  00063E  EC55  F000         	call	_printf	;wreg free
  1290                           
  1291                           ;main.c: 153: lcdInst(0b11000000);;
  1292  000642  0EC0               	movlw	192
  1293  000644  EC13  F006         	call	_lcdInst
  1294                           
  1295                           ;main.c: 154: printf("BATTERIES: %02d   ", numC);
  1296  000648  0EFE               	movlw	low STR_11
  1297  00064A  6E31               	movwf	printf@f,c
  1298  00064C  0EFE               	movlw	high STR_11
  1299  00064E  6E32               	movwf	printf@f+1,c
  1300  000650  C057  F033         	movff	_numC,?_printf+2
  1301  000654  6A34               	clrf	?_printf+3,c
  1302  000656  EC55  F000         	call	_printf	;wreg free
  1303                           
  1304                           ;main.c: 155: (INTCONbits.GIE = 1);
  1305  00065A  8EF2               	bsf	intcon,7,c	;volatile
  1306  00065C                     l2326:
  1307  00065C  0E05               	movlw	5
  1308  00065E  1859               	xorwf	_screenMode,w,c
  1309  000660  105A               	iorwf	_screenMode+1,w,c
  1310  000662  A4D8               	btfss	status,2,c
  1311  000664  D018               	goto	l2336
  1312  000666  D7E3               	goto	l201
  1313  000668                     l204:
  1314                           
  1315                           ;main.c: 158: (INTCONbits.GIE = 0);
  1316  000668  9EF2               	bcf	intcon,7,c	;volatile
  1317                           
  1318                           ;main.c: 159: lcdInst(0b10000000);;
  1319  00066A  0E80               	movlw	128
  1320  00066C  EC13  F006         	call	_lcdInst
  1321                           
  1322                           ;main.c: 160: printf("# OF 9V         ");
  1323  000670  0E55               	movlw	low STR_14
  1324  000672  6E31               	movwf	printf@f,c
  1325  000674  0EFF               	movlw	high STR_14
  1326  000676  6E32               	movwf	printf@f+1,c
  1327  000678  EC55  F000         	call	_printf	;wreg free
  1328                           
  1329                           ;main.c: 161: lcdInst(0b11000000);;
  1330  00067C  0EC0               	movlw	192
  1331  00067E  EC13  F006         	call	_lcdInst
  1332                           
  1333                           ;main.c: 162: printf("BATTERIES: %02d     ", num9V);
  1334  000682  0EE9               	movlw	low STR_15
  1335  000684  6E31               	movwf	printf@f,c
  1336  000686  0EFE               	movlw	high STR_15
  1337  000688  6E32               	movwf	printf@f+1,c
  1338  00068A  C054  F033         	movff	_num9V,?_printf+2
  1339  00068E  6A34               	clrf	?_printf+3,c
  1340  000690  EC55  F000         	call	_printf	;wreg free
  1341                           
  1342                           ;main.c: 163: (INTCONbits.GIE = 1);
  1343  000694  8EF2               	bsf	intcon,7,c	;volatile
  1344  000696                     l2336:
  1345  000696  0E06               	movlw	6
  1346  000698  1859               	xorwf	_screenMode,w,c
  1347  00069A  105A               	iorwf	_screenMode+1,w,c
  1348  00069C  A4D8               	btfss	status,2,c
  1349  00069E  D018               	goto	l2346
  1350  0006A0  D7E3               	goto	l204
  1351  0006A2                     l207:
  1352                           
  1353                           ;main.c: 166: (INTCONbits.GIE = 0);
  1354  0006A2  9EF2               	bcf	intcon,7,c	;volatile
  1355                           
  1356                           ;main.c: 167: lcdInst(0b10000000);;
  1357  0006A4  0E80               	movlw	128
  1358  0006A6  EC13  F006         	call	_lcdInst
  1359                           
  1360                           ;main.c: 168: printf("# OF AA         ");
  1361  0006AA  0E44               	movlw	low STR_16
  1362  0006AC  6E31               	movwf	printf@f,c
  1363  0006AE  0EFF               	movlw	high STR_16
  1364  0006B0  6E32               	movwf	printf@f+1,c
  1365  0006B2  EC55  F000         	call	_printf	;wreg free
  1366                           
  1367                           ;main.c: 169: lcdInst(0b11000000);;
  1368  0006B6  0EC0               	movlw	192
  1369  0006B8  EC13  F006         	call	_lcdInst
  1370                           
  1371                           ;main.c: 170: printf("BATTERIES: %02d     ", numAA);
  1372  0006BC  0EE9               	movlw	low STR_15
  1373  0006BE  6E31               	movwf	printf@f,c
  1374  0006C0  0EFE               	movlw	high STR_15
  1375  0006C2  6E32               	movwf	printf@f+1,c
  1376  0006C4  C055  F033         	movff	_numAA,?_printf+2
  1377  0006C8  6A34               	clrf	?_printf+3,c
  1378  0006CA  EC55  F000         	call	_printf	;wreg free
  1379                           
  1380                           ;main.c: 171: (INTCONbits.GIE = 1);
  1381  0006CE  8EF2               	bsf	intcon,7,c	;volatile
  1382  0006D0                     l2346:
  1383  0006D0  0E07               	movlw	7
  1384  0006D2  1859               	xorwf	_screenMode,w,c
  1385  0006D4  105A               	iorwf	_screenMode+1,w,c
  1386  0006D6  A4D8               	btfss	status,2,c
  1387  0006D8  D018               	goto	l2356
  1388  0006DA  D7E3               	goto	l207
  1389  0006DC                     l210:
  1390                           
  1391                           ;main.c: 174: (INTCONbits.GIE = 0);
  1392  0006DC  9EF2               	bcf	intcon,7,c	;volatile
  1393                           
  1394                           ;main.c: 175: lcdInst(0b10000000);;
  1395  0006DE  0E80               	movlw	128
  1396  0006E0  EC13  F006         	call	_lcdInst
  1397                           
  1398                           ;main.c: 176: printf("# OF DRAINED    ");
  1399  0006E4  0E99               	movlw	low STR_18
  1400  0006E6  6E31               	movwf	printf@f,c
  1401  0006E8  0EFF               	movlw	high STR_18
  1402  0006EA  6E32               	movwf	printf@f+1,c
  1403  0006EC  EC55  F000         	call	_printf	;wreg free
  1404                           
  1405                           ;main.c: 177: lcdInst(0b11000000);;
  1406  0006F0  0EC0               	movlw	192
  1407  0006F2  EC13  F006         	call	_lcdInst
  1408                           
  1409                           ;main.c: 178: printf("BATTERIES: %02d     ", numDrain);
  1410  0006F6  0EE9               	movlw	low STR_15
  1411  0006F8  6E31               	movwf	printf@f,c
  1412  0006FA  0EFE               	movlw	high STR_15
  1413  0006FC  6E32               	movwf	printf@f+1,c
  1414  0006FE  C058  F033         	movff	_numDrain,?_printf+2
  1415  000702  6A34               	clrf	?_printf+3,c
  1416  000704  EC55  F000         	call	_printf	;wreg free
  1417                           
  1418                           ;main.c: 179: (INTCONbits.GIE = 1);
  1419  000708  8EF2               	bsf	intcon,7,c	;volatile
  1420  00070A                     l2356:
  1421  00070A  0E08               	movlw	8
  1422  00070C  1859               	xorwf	_screenMode,w,c
  1423  00070E  105A               	iorwf	_screenMode+1,w,c
  1424  000710  A4D8               	btfss	status,2,c
  1425  000712  D05B               	goto	l2378
  1426  000714  D7E3               	goto	l210
  1427  000716                     l2358:
  1428                           
  1429                           ;main.c: 183: I2C_Master_Start();
  1430  000716  EC22  F006         	call	_I2C_Master_Start	;wreg free
  1431                           
  1432                           ;main.c: 184: I2C_Master_Write(0b11010000);
  1433  00071A  0E00               	movlw	0
  1434  00071C  6E27               	movwf	I2C_Master_Write@d+1,c
  1435  00071E  0ED0               	movlw	208
  1436  000720  6E26               	movwf	I2C_Master_Write@d,c
  1437  000722  EC19  F006         	call	_I2C_Master_Write	;wreg free
  1438                           
  1439                           ;main.c: 185: I2C_Master_Write(0x00);
  1440  000726  0E00               	movlw	0
  1441  000728  6E27               	movwf	I2C_Master_Write@d+1,c
  1442  00072A  0E00               	movlw	0
  1443  00072C  6E26               	movwf	I2C_Master_Write@d,c
  1444  00072E  EC19  F006         	call	_I2C_Master_Write	;wreg free
  1445                           
  1446                           ;main.c: 186: I2C_Master_Stop();
  1447  000732  EC1E  F006         	call	_I2C_Master_Stop	;wreg free
  1448                           
  1449                           ;main.c: 188: I2C_Master_Start();
  1450  000736  EC22  F006         	call	_I2C_Master_Start	;wreg free
  1451                           
  1452                           ;main.c: 189: I2C_Master_Write(0b11010001);
  1453  00073A  0E00               	movlw	0
  1454  00073C  6E27               	movwf	I2C_Master_Write@d+1,c
  1455  00073E  0ED1               	movlw	209
  1456  000740  6E26               	movwf	I2C_Master_Write@d,c
  1457  000742  EC19  F006         	call	_I2C_Master_Write	;wreg free
  1458                           
  1459                           ;main.c: 190: for(unsigned char i=0;i<0x06;i++){
  1460  000746  0E00               	movlw	0
  1461  000748  0100               	movlb	0	; () banked
  1462  00074A  6F8F               	movwf	main@i_394& (0+255),b
  1463  00074C                     l2362:
  1464                           
  1465                           ; BSR set to: 0
  1466  00074C  0E05               	movlw	5
  1467  00074E  0100               	movlb	0	; () banked
  1468  000750  658F               	cpfsgt	main@i_394& (0+255),b
  1469  000752  D001               	goto	l2366
  1470  000754  D010               	goto	l2372
  1471  000756                     l2366:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;main.c: 191: time[i] = I2C_Master_Read(1);
  1475  000756  0100               	movlb	0	; () banked
  1476  000758  518F               	movf	main@i_394& (0+255),w,b
  1477  00075A  0D01               	mullw	1
  1478  00075C  0E39               	movlw	low _time
  1479  00075E  24F3               	addwf	prodl,w,c
  1480  000760  6ED9               	movwf	fsr2l,c
  1481  000762  0E00               	movlw	high _time
  1482  000764  20F4               	addwfc	prodh,w,c
  1483  000766  6EDA               	movwf	fsr2h,c
  1484  000768  0E01               	movlw	1
  1485  00076A  ECE2  F005         	call	_I2C_Master_Read
  1486  00076E  6EDF               	movwf	indf2,c
  1487  000770  0100               	movlb	0	; () banked
  1488  000772  2B8F               	incf	main@i_394& (0+255),f,b
  1489  000774  D7EB               	goto	l2362
  1490  000776                     l2372:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 192: }
  1494                           ;main.c: 193: time[6] = I2C_Master_Read(0);
  1495  000776  0E00               	movlw	0
  1496  000778  ECE2  F005         	call	_I2C_Master_Read
  1497  00077C  6E3F               	movwf	_time+6,c
  1498                           
  1499                           ;main.c: 194: I2C_Master_Stop();
  1500  00077E  EC1E  F006         	call	_I2C_Master_Stop	;wreg free
  1501                           
  1502                           ;main.c: 195: lcdInst(0b10000000);;
  1503  000782  0E80               	movlw	128
  1504  000784  EC13  F006         	call	_lcdInst
  1505                           
  1506                           ;main.c: 196: printf("DATE: %02x/%02x/%02x  ", time[6],time[5],time[4]);
  1507  000788  0EBB               	movlw	low STR_20
  1508  00078A  6E31               	movwf	printf@f,c
  1509  00078C  0EFE               	movlw	high STR_20
  1510  00078E  6E32               	movwf	printf@f+1,c
  1511  000790  C03F  F033         	movff	_time+6,?_printf+2
  1512  000794  6A34               	clrf	?_printf+3,c
  1513  000796  C03E  F035         	movff	_time+5,?_printf+4
  1514  00079A  6A36               	clrf	?_printf+5,c
  1515  00079C  C03D  F037         	movff	_time+4,?_printf+6
  1516  0007A0  6A38               	clrf	?_printf+7,c
  1517  0007A2  EC55  F000         	call	_printf	;wreg free
  1518                           
  1519                           ;main.c: 197: lcdInst(0b11000000);;
  1520  0007A6  0EC0               	movlw	192
  1521  0007A8  EC13  F006         	call	_lcdInst
  1522                           
  1523                           ;main.c: 198: printf("TIME: %02x:%02x:%02x  ", time[2],time[1],time[0]);
  1524  0007AC  0ED2               	movlw	low STR_21
  1525  0007AE  6E31               	movwf	printf@f,c
  1526  0007B0  0EFE               	movlw	high STR_21
  1527  0007B2  6E32               	movwf	printf@f+1,c
  1528  0007B4  C03B  F033         	movff	_time+2,?_printf+2
  1529  0007B8  6A34               	clrf	?_printf+3,c
  1530  0007BA  C03A  F035         	movff	_time+1,?_printf+4
  1531  0007BE  6A36               	clrf	?_printf+5,c
  1532  0007C0  C039  F037         	movff	_time,?_printf+6
  1533  0007C4  6A38               	clrf	?_printf+7,c
  1534  0007C6  EC55  F000         	call	_printf	;wreg free
  1535  0007CA                     l2378:
  1536  0007CA  0E09               	movlw	9
  1537  0007CC  1859               	xorwf	_screenMode,w,c
  1538  0007CE  105A               	iorwf	_screenMode+1,w,c
  1539  0007D0  A4D8               	btfss	status,2,c
  1540  0007D2  D6BA               	goto	l2280
  1541  0007D4  D7A0               	goto	l2358
  1542  0007D6                     __end_of_main:
  1543                           	opt stack 0
  1544                           tblptru	equ	0xFF8
  1545                           tblptrh	equ	0xFF7
  1546                           tblptrl	equ	0xFF6
  1547                           tablat	equ	0xFF5
  1548                           prodh	equ	0xFF4
  1549                           prodl	equ	0xFF3
  1550                           intcon	equ	0xFF2
  1551                           intcon3	equ	0xFF0
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           indf2	equ	0xFDF
  1555                           fsr2h	equ	0xFDA
  1556                           fsr2l	equ	0xFD9
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _printf *****************
  1560 ;; Defined at:
  1561 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  f               2   48[COMRAM] PTR const unsigned char 
  1564 ;;		 -> STR_21(23), STR_20(23), STR_19(21), STR_18(17), 
  1565 ;;		 -> STR_17(21), STR_16(17), STR_15(21), STR_14(17), 
  1566 ;;		 -> STR_13(19), STR_12(17), STR_11(19), STR_10(17), 
  1567 ;;		 -> STR_9(25), STR_8(17), STR_7(17), STR_6(17), 
  1568 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
  1569 ;;		 -> STR_1(17), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  idx             1    4[BANK0 ] unsigned char 
  1572 ;;  tmpval          4    0        struct .
  1573 ;;  cp              3    0        PTR const unsigned char 
  1574 ;;  width           2   11[BANK0 ] int 
  1575 ;;  val             2    8[BANK0 ] unsigned int 
  1576 ;;  ap              2    5[BANK0 ] PTR void [1]
  1577 ;;		 -> ?_printf(2), 
  1578 ;;  len             2    0        unsigned int 
  1579 ;;  c               1   13[BANK0 ] char 
  1580 ;;  flag            1   10[BANK0 ] unsigned char 
  1581 ;;  prec            1    7[BANK0 ] char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2   48[COMRAM] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         8      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:       22 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    5
  1598 ;; This function calls:
  1599 ;;		___lwdiv
  1600 ;;		___lwmod
  1601 ;;		___wmul
  1602 ;;		_isdigit
  1603 ;;		_putch
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text1
  1610  0000AA                     __ptext1:
  1611                           	opt stack 0
  1612  0000AA                     _printf:
  1613                           	opt stack 25
  1614                           
  1615                           ;doprnt.c: 466: va_list ap;
  1616                           ;doprnt.c: 499: signed char c;
  1617                           ;doprnt.c: 501: int width;
  1618                           ;doprnt.c: 506: signed char prec;
  1619                           ;doprnt.c: 508: unsigned char flag;
  1620                           ;doprnt.c: 523: union {
  1621                           ;doprnt.c: 524: unsigned long vd;
  1622                           ;doprnt.c: 525: double integ;
  1623                           ;doprnt.c: 526: } tmpval;
  1624                           ;doprnt.c: 528: unsigned int val;
  1625                           ;doprnt.c: 529: unsigned len;
  1626                           ;doprnt.c: 530: const char * cp;
  1627                           ;doprnt.c: 533: *ap = __va_start();
  1628                           
  1629                           ;incstack = 0
  1630  0000AA  0E33               	movlw	low (?_printf+2)
  1631  0000AC  0100               	movlb	0	; () banked
  1632  0000AE  6F85               	movwf	printf@ap& (0+255),b
  1633  0000B0  0E00               	movlw	high (?_printf+2)
  1634  0000B2  0100               	movlb	0	; () banked
  1635  0000B4  6F86               	movwf	(printf@ap+1)& (0+255),b
  1636                           
  1637                           ;doprnt.c: 536: while(c = *f++) {
  1638  0000B6  D1BD               	goto	l2208
  1639  0000B8                     l2082:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;doprnt.c: 538: if(c != '%')
  1643  0000B8  0E25               	movlw	37
  1644  0000BA  0100               	movlb	0	; () banked
  1645  0000BC  198D               	xorwf	printf@c& (0+255),w,b
  1646  0000BE  B4D8               	btfsc	status,2,c
  1647  0000C0  D005               	goto	l2086
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;doprnt.c: 540: {
  1651                           ;doprnt.c: 541: (putch(c) );
  1652  0000C2  0100               	movlb	0	; () banked
  1653  0000C4  518D               	movf	printf@c& (0+255),w,b
  1654  0000C6  EC0D  F006         	call	_putch
  1655                           
  1656                           ;doprnt.c: 542: continue;
  1657  0000CA  D1B3               	goto	l2208
  1658  0000CC                     l2086:
  1659                           
  1660                           ;doprnt.c: 543: }
  1661                           ;doprnt.c: 546: width = 0;
  1662  0000CC  0E00               	movlw	0
  1663  0000CE  0100               	movlb	0	; () banked
  1664  0000D0  6F8C               	movwf	(printf@width+1)& (0+255),b
  1665  0000D2  0E00               	movlw	0
  1666  0000D4  6F8B               	movwf	printf@width& (0+255),b
  1667                           
  1668                           ;doprnt.c: 548: flag = 0;
  1669  0000D6  0E00               	movlw	0
  1670  0000D8  0100               	movlb	0	; () banked
  1671  0000DA  6F8A               	movwf	printf@flag& (0+255),b
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;doprnt.c: 551: switch(*f) {
  1675                           
  1676                           ;doprnt.c: 550: for(;;) {
  1677  0000DC  D004               	goto	l2092
  1678  0000DE                     l2088:
  1679                           
  1680                           ;doprnt.c: 580: flag |= 0x04;
  1681  0000DE  0100               	movlb	0	; () banked
  1682  0000E0  858A               	bsf	printf@flag& (0+255),2,b
  1683                           
  1684                           ;doprnt.c: 581: f++;
  1685  0000E2  4A31               	infsnz	printf@f,f,c
  1686  0000E4  2A32               	incf	printf@f+1,f,c
  1687  0000E6                     l2092:
  1688  0000E6  C031  FFF6         	movff	printf@f,tblptrl
  1689  0000EA  C032  FFF7         	movff	printf@f+1,tblptrh
  1690  0000EE                     	if	0	;tblptru may be non-zero
  1691  0000EE                     	endif
  1692  0000EE                     	if	0	;tblptru may be non-zero
  1693  0000EE                     	endif
  1694  0000EE  0008               	tblrd		*
  1695  0000F0  50F5               	movf	tablat,w,c
  1696                           
  1697                           ; Switch size 1, requested type "space"
  1698                           ; Number of cases is 1, Range of values is 48 to 48
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte            4     3 (average)
  1702                           ;	Chosen strategy is simple_byte
  1703  0000F2  0A30               	xorlw	48	; case 48
  1704  0000F4  B4D8               	btfsc	status,2,c
  1705  0000F6  D7F3               	goto	l2088
  1706                           
  1707                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1708                           
  1709                           ;doprnt.c: 586: }
  1710                           
  1711                           ;doprnt.c: 585: break;
  1712  0000F8  C031  FFF6         	movff	printf@f,tblptrl
  1713  0000FC  C032  FFF7         	movff	printf@f+1,tblptrh
  1714  000100                     	if	0	;tblptru may be non-zero
  1715  000100                     	endif
  1716  000100                     	if	0	;tblptru may be non-zero
  1717  000100                     	endif
  1718  000100  0008               	tblrd		*
  1719  000102  50F5               	movf	tablat,w,c
  1720  000104  ECF5  F005         	call	_isdigit
  1721  000108  A0D8               	btfss	status,0,c
  1722  00010A  D042               	goto	l2110
  1723                           
  1724                           ;doprnt.c: 598: width = 0;
  1725  00010C  0E00               	movlw	0
  1726  00010E  0100               	movlb	0	; () banked
  1727  000110  6F8C               	movwf	(printf@width+1)& (0+255),b
  1728  000112  0E00               	movlw	0
  1729  000114  6F8B               	movwf	printf@width& (0+255),b
  1730  000116                     l2098:
  1731                           
  1732                           ;doprnt.c: 600: width *= 10;
  1733  000116  C08B  F025         	movff	printf@width,___wmul@multiplier
  1734  00011A  C08C  F026         	movff	printf@width+1,___wmul@multiplier+1
  1735  00011E  0E00               	movlw	0
  1736  000120  6E28               	movwf	___wmul@multiplicand+1,c
  1737  000122  0E0A               	movlw	10
  1738  000124  6E27               	movwf	___wmul@multiplicand,c
  1739  000126  ECCF  F005         	call	___wmul	;wreg free
  1740  00012A  C025  F08B         	movff	?___wmul,printf@width
  1741  00012E  C026  F08C         	movff	?___wmul+1,printf@width+1
  1742                           
  1743                           ;doprnt.c: 601: width += *f++ - '0';
  1744  000132  0ED0               	movlw	208
  1745  000134  0100               	movlb	0	; () banked
  1746  000136  6F80               	movwf	??_printf& (0+255),b
  1747  000138  0EFF               	movlw	255
  1748  00013A  0100               	movlb	0	; () banked
  1749  00013C  6F81               	movwf	(??_printf+1)& (0+255),b
  1750  00013E  C031  FFF6         	movff	printf@f,tblptrl
  1751  000142  C032  FFF7         	movff	printf@f+1,tblptrh
  1752  000146                     	if	0	;tblptru may be non-zero
  1753  000146                     	endif
  1754  000146                     	if	0	;tblptru may be non-zero
  1755  000146                     	endif
  1756  000146  0008               	tblrd		*
  1757  000148  50F5               	movf	tablat,w,c
  1758  00014A  0100               	movlb	0	; () banked
  1759  00014C  6F82               	movwf	(??_printf+2)& (0+255),b
  1760  00014E  6B83               	clrf	(??_printf+3)& (0+255),b
  1761  000150  0100               	movlb	0	; () banked
  1762  000152  5180               	movf	??_printf& (0+255),w,b
  1763  000154  0100               	movlb	0	; () banked
  1764  000156  2782               	addwf	(??_printf+2)& (0+255),f,b
  1765  000158  0100               	movlb	0	; () banked
  1766  00015A  5181               	movf	(??_printf+1)& (0+255),w,b
  1767  00015C  0100               	movlb	0	; () banked
  1768  00015E  2383               	addwfc	(??_printf+3)& (0+255),f,b
  1769  000160  0100               	movlb	0	; () banked
  1770  000162  5182               	movf	(??_printf+2)& (0+255),w,b
  1771  000164  0100               	movlb	0	; () banked
  1772  000166  278B               	addwf	printf@width& (0+255),f,b
  1773  000168  0100               	movlb	0	; () banked
  1774  00016A  5183               	movf	(??_printf+3)& (0+255),w,b
  1775  00016C  0100               	movlb	0	; () banked
  1776  00016E  238C               	addwfc	(printf@width+1)& (0+255),f,b
  1777                           
  1778                           ; BSR set to: 0
  1779  000170  4A31               	infsnz	printf@f,f,c
  1780  000172  2A32               	incf	printf@f+1,f,c
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1784  000174  C031  FFF6         	movff	printf@f,tblptrl
  1785  000178  C032  FFF7         	movff	printf@f+1,tblptrh
  1786  00017C                     	if	0	;tblptru may be non-zero
  1787  00017C                     	endif
  1788  00017C                     	if	0	;tblptru may be non-zero
  1789  00017C                     	endif
  1790  00017C  0008               	tblrd		*
  1791  00017E  50F5               	movf	tablat,w,c
  1792  000180  ECF5  F005         	call	_isdigit
  1793  000184  A0D8               	btfss	status,0,c
  1794  000186  D004               	goto	l2110
  1795  000188  D7C6               	goto	l2098
  1796  00018A                     l2106:
  1797                           
  1798                           ;doprnt.c: 721: flag |= 0x80;
  1799  00018A  0100               	movlb	0	; () banked
  1800  00018C  8F8A               	bsf	printf@flag& (0+255),7,b
  1801                           
  1802                           ;doprnt.c: 723: break;
  1803  00018E  D018               	goto	l284
  1804  000190                     l2110:
  1805  000190  C031  FFF6         	movff	printf@f,tblptrl
  1806  000194  C032  FFF7         	movff	printf@f+1,tblptrh
  1807  000198  4A31               	infsnz	printf@f,f,c
  1808  00019A  2A32               	incf	printf@f+1,f,c
  1809  00019C                     	if	0	;tblptru may be non-zero
  1810  00019C                     	endif
  1811  00019C                     	if	0	;tblptru may be non-zero
  1812  00019C                     	endif
  1813  00019C  0008               	tblrd		*
  1814  00019E  CFF5 F08D          	movff	tablat,printf@c
  1815  0001A2  0100               	movlb	0	; () banked
  1816  0001A4  518D               	movf	printf@c& (0+255),w,b
  1817                           
  1818                           ; Switch size 1, requested type "space"
  1819                           ; Number of cases is 4, Range of values is 0 to 120
  1820                           ; switch strategies available:
  1821                           ; Name         Instructions Cycles
  1822                           ; simple_byte           13     7 (average)
  1823                           ;	Chosen strategy is simple_byte
  1824  0001A6  0A00               	xorlw	0	; case 0
  1825  0001A8  B4D8               	btfsc	status,2,c
  1826  0001AA  0012               	return	
  1827  0001AC  0A64               	xorlw	100	; case 100
  1828  0001AE  B4D8               	btfsc	status,2,c
  1829  0001B0  D007               	goto	l284
  1830  0001B2  0A0D               	xorlw	13	; case 105
  1831  0001B4  B4D8               	btfsc	status,2,c
  1832  0001B6  D004               	goto	l284
  1833  0001B8  0A11               	xorlw	17	; case 120
  1834  0001BA  B4D8               	btfsc	status,2,c
  1835  0001BC  D7E6               	goto	l2106
  1836  0001BE  D139               	goto	l2208
  1837  0001C0                     l284:
  1838                           
  1839                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1840  0001C0  0100               	movlb	0	; () banked
  1841  0001C2  BF8A               	btfsc	printf@flag& (0+255),7,b
  1842  0001C4  D019               	goto	l2122
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;doprnt.c: 1253: {
  1846                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1847  0001C6  C085  FFD9         	movff	printf@ap,fsr2l
  1848  0001CA  C086  FFDA         	movff	printf@ap+1,fsr2h
  1849  0001CE  CFDE F088          	movff	postinc2,printf@val
  1850  0001D2  CFDD F089          	movff	postdec2,printf@val+1
  1851                           
  1852                           ; BSR set to: 0
  1853  0001D6  0E02               	movlw	2
  1854  0001D8  0100               	movlb	0	; () banked
  1855  0001DA  2785               	addwf	printf@ap& (0+255),f,b
  1856  0001DC  0E00               	movlw	0
  1857  0001DE  2386               	addwfc	(printf@ap+1)& (0+255),f,b
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;doprnt.c: 1261: if((int)val < 0) {
  1861  0001E0  0100               	movlb	0	; () banked
  1862  0001E2  AF89               	btfss	(printf@val+1)& (0+255),7,b
  1863  0001E4  D053               	goto	l2156
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;doprnt.c: 1262: flag |= 0x03;
  1867  0001E6  0E03               	movlw	3
  1868  0001E8  0100               	movlb	0	; () banked
  1869  0001EA  138A               	iorwf	printf@flag& (0+255),f,b
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;doprnt.c: 1263: val = -val;
  1873  0001EC  0100               	movlb	0	; () banked
  1874  0001EE  6D88               	negf	printf@val& (0+255),b
  1875  0001F0  1F89               	comf	(printf@val+1)& (0+255),f,b
  1876  0001F2  B0D8               	btfsc	status,0,c
  1877  0001F4  2B89               	incf	(printf@val+1)& (0+255),f,b
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;doprnt.c: 1264: }
  1881                           ;doprnt.c: 1266: }
  1882  0001F6  D04A               	goto	l2156
  1883  0001F8                     l2122:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;doprnt.c: 1268: else
  1887                           ;doprnt.c: 1273: {
  1888                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1889  0001F8  C085  FFD9         	movff	printf@ap,fsr2l
  1890  0001FC  C086  FFDA         	movff	printf@ap+1,fsr2h
  1891  000200  CFDE F088          	movff	postinc2,printf@val
  1892  000204  CFDD F089          	movff	postdec2,printf@val+1
  1893                           
  1894                           ; BSR set to: 0
  1895  000208  0E02               	movlw	2
  1896  00020A  0100               	movlb	0	; () banked
  1897  00020C  2785               	addwf	printf@ap& (0+255),f,b
  1898  00020E  0E00               	movlw	0
  1899  000210  2386               	addwfc	(printf@ap+1)& (0+255),f,b
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;doprnt.c: 1287: }
  1903                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1904  000212  D03C               	goto	l2156
  1905  000214                     l2126:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1909  000214  0E01               	movlw	1
  1910  000216  0100               	movlb	0	; () banked
  1911  000218  6F8D               	movwf	printf@c& (0+255),b
  1912  00021A                     l2128:
  1913                           
  1914                           ; BSR set to: 0
  1915  00021A  0E05               	movlw	5
  1916  00021C  0100               	movlb	0	; () banked
  1917  00021E  198D               	xorwf	printf@c& (0+255),w,b
  1918  000220  B4D8               	btfsc	status,2,c
  1919  000222  D03D               	goto	l2158
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;doprnt.c: 1306: if(val < dpowers[c])
  1923                           
  1924                           ; BSR set to: 0
  1925                           
  1926                           ; BSR set to: 0
  1927  000224  0100               	movlb	0	; () banked
  1928  000226  518D               	movf	printf@c& (0+255),w,b
  1929  000228  0D02               	mullw	2
  1930  00022A  0E90               	movlw	low _dpowers
  1931  00022C  24F3               	addwf	prodl,w,c
  1932  00022E  6EF6               	movwf	tblptrl,c
  1933  000230  0EFE               	movlw	high _dpowers
  1934  000232  20F4               	addwfc	prodh,w,c
  1935  000234  6EF7               	movwf	tblptrh,c
  1936  000236                     	if	0	;There are less than 3 active tblptr bytes
  1937  000236                     	endif
  1938  000236  0009               	tblrd		*+
  1939  000238  50F5               	movf	tablat,w,c
  1940  00023A  0100               	movlb	0	; () banked
  1941  00023C  5D88               	subwf	printf@val& (0+255),w,b
  1942  00023E  0009               	tblrd		*+
  1943  000240  50F5               	movf	tablat,w,c
  1944  000242  0100               	movlb	0	; () banked
  1945  000244  5989               	subwfb	(printf@val+1)& (0+255),w,b
  1946  000246  A0D8               	btfss	status,0,c
  1947  000248  D02A               	goto	l2158
  1948                           
  1949                           ; BSR set to: 0
  1950                           
  1951                           ; BSR set to: 0
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;doprnt.c: 1307: break;
  1955  00024A  0100               	movlb	0	; () banked
  1956  00024C  2B8D               	incf	printf@c& (0+255),f,b
  1957  00024E  D7E5               	goto	l2128
  1958  000250                     l2140:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1962  000250  0E01               	movlw	1
  1963  000252  0100               	movlb	0	; () banked
  1964  000254  6F8D               	movwf	printf@c& (0+255),b
  1965  000256                     l2142:
  1966                           
  1967                           ; BSR set to: 0
  1968  000256  0E04               	movlw	4
  1969  000258  0100               	movlb	0	; () banked
  1970  00025A  198D               	xorwf	printf@c& (0+255),w,b
  1971  00025C  B4D8               	btfsc	status,2,c
  1972  00025E  D01F               	goto	l2158
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1976                           
  1977                           ; BSR set to: 0
  1978                           
  1979                           ; BSR set to: 0
  1980  000260  0100               	movlb	0	; () banked
  1981  000262  518D               	movf	printf@c& (0+255),w,b
  1982  000264  0D02               	mullw	2
  1983  000266  0E9A               	movlw	low _hexpowers
  1984  000268  24F3               	addwf	prodl,w,c
  1985  00026A  6EF6               	movwf	tblptrl,c
  1986  00026C  0EFE               	movlw	high _hexpowers
  1987  00026E  20F4               	addwfc	prodh,w,c
  1988  000270  6EF7               	movwf	tblptrh,c
  1989  000272                     	if	0	;There are less than 3 active tblptr bytes
  1990  000272                     	endif
  1991  000272  0009               	tblrd		*+
  1992  000274  50F5               	movf	tablat,w,c
  1993  000276  0100               	movlb	0	; () banked
  1994  000278  5D88               	subwf	printf@val& (0+255),w,b
  1995  00027A  0009               	tblrd		*+
  1996  00027C  50F5               	movf	tablat,w,c
  1997  00027E  0100               	movlb	0	; () banked
  1998  000280  5989               	subwfb	(printf@val+1)& (0+255),w,b
  1999  000282  A0D8               	btfss	status,0,c
  2000  000284  D00C               	goto	l2158
  2001                           
  2002                           ; BSR set to: 0
  2003                           
  2004                           ; BSR set to: 0
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;doprnt.c: 1318: break;
  2008  000286  0100               	movlb	0	; () banked
  2009  000288  2B8D               	incf	printf@c& (0+255),f,b
  2010  00028A  D7E5               	goto	l2142
  2011  00028C                     l2156:
  2012                           
  2013                           ; BSR set to: 0
  2014  00028C  0100               	movlb	0	; () banked
  2015  00028E  518A               	movf	printf@flag& (0+255),w,b
  2016  000290  0B80               	andlw	128
  2017                           
  2018                           ; Switch size 1, requested type "space"
  2019                           ; Number of cases is 2, Range of values is 0 to 128
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte            7     4 (average)
  2023                           ;	Chosen strategy is simple_byte
  2024  000292  0A00               	xorlw	0	; case 0
  2025  000294  B4D8               	btfsc	status,2,c
  2026  000296  D7BE               	goto	l2126
  2027  000298  0A80               	xorlw	128	; case 128
  2028  00029A  B4D8               	btfsc	status,2,c
  2029  00029C  D7D9               	goto	l2140
  2030  00029E                     l2158:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2034  00029E  0100               	movlb	0	; () banked
  2035  0002A0  518B               	movf	printf@width& (0+255),w,b
  2036  0002A2  0100               	movlb	0	; () banked
  2037  0002A4  118C               	iorwf	(printf@width+1)& (0+255),w,b
  2038  0002A6  B4D8               	btfsc	status,2,c
  2039  0002A8  D00B               	goto	l2164
  2040                           
  2041                           ; BSR set to: 0
  2042  0002AA  C08A  F080         	movff	printf@flag,??_printf
  2043  0002AE  0E03               	movlw	3
  2044  0002B0  0100               	movlb	0	; () banked
  2045  0002B2  1780               	andwf	??_printf& (0+255),f,b
  2046  0002B4  B4D8               	btfsc	status,2,c
  2047  0002B6  D004               	goto	l2164
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;doprnt.c: 1346: width--;
  2051  0002B8  0100               	movlb	0	; () banked
  2052  0002BA  078B               	decf	printf@width& (0+255),f,b
  2053  0002BC  A0D8               	btfss	status,0,c
  2054  0002BE  078C               	decf	(printf@width+1)& (0+255),f,b
  2055  0002C0                     l2164:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;doprnt.c: 1381: if(width > c)
  2059  0002C0  0E80               	movlw	128
  2060  0002C2  0100               	movlb	0	; () banked
  2061  0002C4  BF8D               	btfsc	printf@c& (0+255),7,b
  2062  0002C6  0E7F               	movlw	127
  2063  0002C8  0100               	movlb	0	; () banked
  2064  0002CA  6F80               	movwf	??_printf& (0+255),b
  2065  0002CC  0100               	movlb	0	; () banked
  2066  0002CE  518B               	movf	printf@width& (0+255),w,b
  2067  0002D0  0100               	movlb	0	; () banked
  2068  0002D2  5D8D               	subwf	printf@c& (0+255),w,b
  2069  0002D4  0100               	movlb	0	; () banked
  2070  0002D6  518C               	movf	(printf@width+1)& (0+255),w,b
  2071  0002D8  0A80               	xorlw	128
  2072  0002DA  0100               	movlb	0	; () banked
  2073  0002DC  5980               	subwfb	??_printf& (0+255),w,b
  2074  0002DE  B0D8               	btfsc	status,0,c
  2075  0002E0  D00B               	goto	l2168
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;doprnt.c: 1382: width -= c;
  2079  0002E2  0100               	movlb	0	; () banked
  2080  0002E4  518D               	movf	printf@c& (0+255),w,b
  2081  0002E6  0100               	movlb	0	; () banked
  2082  0002E8  5F8B               	subwf	printf@width& (0+255),f,b
  2083  0002EA  0E00               	movlw	0
  2084  0002EC  0100               	movlb	0	; () banked
  2085  0002EE  BF8D               	btfsc	printf@c& (0+255),7,b
  2086  0002F0  0EFF               	movlw	255
  2087  0002F2  0100               	movlb	0	; () banked
  2088  0002F4  5B8C               	subwfb	(printf@width+1)& (0+255),f,b
  2089  0002F6  D005               	goto	l2170
  2090  0002F8                     l2168:
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;doprnt.c: 1383: else
  2094                           ;doprnt.c: 1384: width = 0;
  2095  0002F8  0E00               	movlw	0
  2096  0002FA  0100               	movlb	0	; () banked
  2097  0002FC  6F8C               	movwf	(printf@width+1)& (0+255),b
  2098  0002FE  0E00               	movlw	0
  2099  000300  6F8B               	movwf	printf@width& (0+255),b
  2100  000302                     l2170:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;doprnt.c: 1387: if(flag & 0x04) {
  2104  000302  0100               	movlb	0	; () banked
  2105  000304  A58A               	btfss	printf@flag& (0+255),2,b
  2106  000306  D018               	goto	l2182
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;doprnt.c: 1392: if(flag & 0x03)
  2110  000308  C08A  F080         	movff	printf@flag,??_printf
  2111  00030C  0E03               	movlw	3
  2112  00030E  0100               	movlb	0	; () banked
  2113  000310  1780               	andwf	??_printf& (0+255),f,b
  2114  000312  B4D8               	btfsc	status,2,c
  2115  000314  D003               	goto	l2176
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;doprnt.c: 1393: (putch('-') );
  2119  000316  0E2D               	movlw	45
  2120  000318  EC0D  F006         	call	_putch
  2121  00031C                     l2176:
  2122                           
  2123                           ;doprnt.c: 1415: if(width)
  2124  00031C  0100               	movlb	0	; () banked
  2125  00031E  518B               	movf	printf@width& (0+255),w,b
  2126  000320  0100               	movlb	0	; () banked
  2127  000322  118C               	iorwf	(printf@width+1)& (0+255),w,b
  2128  000324  B4D8               	btfsc	status,2,c
  2129  000326  D025               	goto	l2192
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;doprnt.c: 1417: (putch('0') );
  2133                           
  2134                           ; BSR set to: 0
  2135                           
  2136                           ;doprnt.c: 1416: do
  2137  000328  0E30               	movlw	48
  2138  00032A  EC0D  F006         	call	_putch
  2139                           
  2140                           ;doprnt.c: 1418: while(--width);
  2141  00032E  0100               	movlb	0	; () banked
  2142  000330  078B               	decf	printf@width& (0+255),f,b
  2143  000332  A0D8               	btfss	status,0,c
  2144  000334  078C               	decf	(printf@width+1)& (0+255),f,b
  2145  000336  D7F2               	goto	l2176
  2146  000338                     l2182:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;doprnt.c: 1422: {
  2150                           ;doprnt.c: 1424: if(width
  2151                           ;doprnt.c: 1428: )
  2152  000338  0100               	movlb	0	; () banked
  2153  00033A  518B               	movf	printf@width& (0+255),w,b
  2154  00033C  0100               	movlb	0	; () banked
  2155  00033E  118C               	iorwf	(printf@width+1)& (0+255),w,b
  2156  000340  B4D8               	btfsc	status,2,c
  2157  000342  D00D               	goto	l2188
  2158  000344                     l2184:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;doprnt.c: 1430: (putch(' ') );
  2162  000344  0E20               	movlw	32
  2163  000346  EC0D  F006         	call	_putch
  2164                           
  2165                           ;doprnt.c: 1431: while(--width);
  2166  00034A  0100               	movlb	0	; () banked
  2167  00034C  078B               	decf	printf@width& (0+255),f,b
  2168  00034E  A0D8               	btfss	status,0,c
  2169  000350  078C               	decf	(printf@width+1)& (0+255),f,b
  2170  000352  0100               	movlb	0	; () banked
  2171  000354  518B               	movf	printf@width& (0+255),w,b
  2172  000356  0100               	movlb	0	; () banked
  2173  000358  118C               	iorwf	(printf@width+1)& (0+255),w,b
  2174  00035A  A4D8               	btfss	status,2,c
  2175  00035C  D7F3               	goto	l2184
  2176  00035E                     l2188:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;doprnt.c: 1438: if(flag & 0x03)
  2180  00035E  C08A  F080         	movff	printf@flag,??_printf
  2181  000362  0E03               	movlw	3
  2182  000364  0100               	movlb	0	; () banked
  2183  000366  1780               	andwf	??_printf& (0+255),f,b
  2184  000368  B4D8               	btfsc	status,2,c
  2185  00036A  D003               	goto	l2192
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;doprnt.c: 1439: (putch('-') );
  2189  00036C  0E2D               	movlw	45
  2190  00036E  EC0D  F006         	call	_putch
  2191  000372                     l2192:
  2192                           
  2193                           ;doprnt.c: 1469: }
  2194                           ;doprnt.c: 1472: prec = c;
  2195  000372  C08D  F087         	movff	printf@c,printf@prec
  2196                           
  2197                           ;doprnt.c: 1474: while(prec--) {
  2198  000376  D057               	goto	l2206
  2199  000378                     l2194:
  2200                           
  2201                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2202  000378  0100               	movlb	0	; () banked
  2203  00037A  5187               	movf	printf@prec& (0+255),w,b
  2204  00037C  0D02               	mullw	2
  2205  00037E  0E90               	movlw	low _dpowers
  2206  000380  24F3               	addwf	prodl,w,c
  2207  000382  6EF6               	movwf	tblptrl,c
  2208  000384  0EFE               	movlw	high _dpowers
  2209  000386  20F4               	addwfc	prodh,w,c
  2210  000388  6EF7               	movwf	tblptrh,c
  2211  00038A                     	if	0	;There are less than 3 active tblptr bytes
  2212  00038A                     	endif
  2213  00038A  0009               	tblrd		*+
  2214  00038C  CFF5 F027          	movff	tablat,___lwdiv@divisor
  2215  000390  000A               	tblrd		*-
  2216  000392  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  2217  000396  C088  F025         	movff	printf@val,___lwdiv@dividend
  2218  00039A  C089  F026         	movff	printf@val+1,___lwdiv@dividend+1
  2219  00039E  ECFE  F004         	call	___lwdiv	;wreg free
  2220  0003A2  C025  F02C         	movff	?___lwdiv,___lwmod@dividend
  2221  0003A6  C026  F02D         	movff	?___lwdiv+1,___lwmod@dividend+1
  2222  0003AA  0E00               	movlw	0
  2223  0003AC  6E2F               	movwf	___lwmod@divisor+1,c
  2224  0003AE  0E0A               	movlw	10
  2225  0003B0  6E2E               	movwf	___lwmod@divisor,c
  2226  0003B2  EC95  F005         	call	___lwmod	;wreg free
  2227  0003B6  502C               	movf	?___lwmod,w,c
  2228  0003B8  0F30               	addlw	48
  2229  0003BA  0100               	movlb	0	; () banked
  2230  0003BC  6F8D               	movwf	printf@c& (0+255),b
  2231                           
  2232                           ;doprnt.c: 1491: break;
  2233  0003BE  D02F               	goto	l2204
  2234  0003C0                     l2196:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;doprnt.c: 1499: {
  2238                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2239  0003C0  C088  F025         	movff	printf@val,___lwdiv@dividend
  2240  0003C4  C089  F026         	movff	printf@val+1,___lwdiv@dividend+1
  2241  0003C8  0100               	movlb	0	; () banked
  2242  0003CA  5187               	movf	printf@prec& (0+255),w,b
  2243  0003CC  0D02               	mullw	2
  2244  0003CE  0E9A               	movlw	low _hexpowers
  2245  0003D0  24F3               	addwf	prodl,w,c
  2246  0003D2  6EF6               	movwf	tblptrl,c
  2247  0003D4  0EFE               	movlw	high _hexpowers
  2248  0003D6  20F4               	addwfc	prodh,w,c
  2249  0003D8  6EF7               	movwf	tblptrh,c
  2250  0003DA                     	if	0	;There are less than 3 active tblptr bytes
  2251  0003DA                     	endif
  2252  0003DA  0009               	tblrd		*+
  2253  0003DC  CFF5 F027          	movff	tablat,___lwdiv@divisor
  2254  0003E0  000A               	tblrd		*-
  2255  0003E2  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  2256  0003E6  ECFE  F004         	call	___lwdiv	;wreg free
  2257  0003EA  5025               	movf	?___lwdiv,w,c
  2258  0003EC  0B0F               	andlw	15
  2259  0003EE  0100               	movlb	0	; () banked
  2260  0003F0  6F84               	movwf	printf@idx& (0+255),b
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2264  0003F2  0100               	movlb	0	; () banked
  2265  0003F4  5184               	movf	printf@idx& (0+255),w,b
  2266  0003F6  0D01               	mullw	1
  2267  0003F8  0E11               	movlw	low STR_22
  2268  0003FA  24F3               	addwf	prodl,w,c
  2269  0003FC  6EF6               	movwf	tblptrl,c
  2270  0003FE  0EFF               	movlw	high STR_22
  2271  000400  20F4               	addwfc	prodh,w,c
  2272  000402  6EF7               	movwf	tblptrh,c
  2273  000404                     	if	0	;There are less than 3 active tblptr bytes
  2274  000404                     	endif
  2275  000404  0008               	tblrd		*
  2276  000406  CFF5 F08D          	movff	tablat,printf@c
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;doprnt.c: 1523: }
  2280                           
  2281                           ;doprnt.c: 1508: }
  2282                           ;doprnt.c: 1510: break;
  2283  00040A  D009               	goto	l2204
  2284  00040C                     l2202:
  2285  00040C  0100               	movlb	0	; () banked
  2286  00040E  518A               	movf	printf@flag& (0+255),w,b
  2287  000410  0B80               	andlw	128
  2288                           
  2289                           ; Switch size 1, requested type "space"
  2290                           ; Number of cases is 2, Range of values is 0 to 128
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte            7     4 (average)
  2294                           ;	Chosen strategy is simple_byte
  2295  000412  0A00               	xorlw	0	; case 0
  2296  000414  B4D8               	btfsc	status,2,c
  2297  000416  D7B0               	goto	l2194
  2298  000418  0A80               	xorlw	128	; case 128
  2299  00041A  B4D8               	btfsc	status,2,c
  2300  00041C  D7D1               	goto	l2196
  2301  00041E                     l2204:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;doprnt.c: 1524: (putch(c) );
  2305  00041E  0100               	movlb	0	; () banked
  2306  000420  518D               	movf	printf@c& (0+255),w,b
  2307  000422  EC0D  F006         	call	_putch
  2308  000426                     l2206:
  2309  000426  0100               	movlb	0	; () banked
  2310  000428  0787               	decf	printf@prec& (0+255),f,b
  2311  00042A  0100               	movlb	0	; () banked
  2312  00042C  2987               	incf	printf@prec& (0+255),w,b
  2313  00042E  A4D8               	btfss	status,2,c
  2314  000430  D7ED               	goto	l2202
  2315  000432                     l2208:
  2316  000432  C031  FFF6         	movff	printf@f,tblptrl
  2317  000436  C032  FFF7         	movff	printf@f+1,tblptrh
  2318  00043A  4A31               	infsnz	printf@f,f,c
  2319  00043C  2A32               	incf	printf@f+1,f,c
  2320  00043E                     	if	0	;tblptru may be non-zero
  2321  00043E                     	endif
  2322  00043E                     	if	0	;tblptru may be non-zero
  2323  00043E                     	endif
  2324  00043E  0008               	tblrd		*
  2325  000440  CFF5 F08D          	movff	tablat,printf@c
  2326  000444  0100               	movlb	0	; () banked
  2327  000446  518D               	movf	printf@c& (0+255),w,b
  2328  000448  B4D8               	btfsc	status,2,c
  2329  00044A  0012               	return	
  2330  00044C  D635               	goto	l2082
  2331  00044E                     __end_of_printf:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           intcon3	equ	0xFF0
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           indf2	equ	0xFDF
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function _putch *****************
  2351 ;; Defined at:
  2352 ;;		line 30 in file "../lcd.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  data            1    wreg     unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  data            1   38[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        1 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    4
  2373 ;; This function calls:
  2374 ;;		_lcdNibble
  2375 ;; This function is called by:
  2376 ;;		_printf
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text2
  2381  000C1A                     __ptext2:
  2382                           	opt stack 0
  2383  000C1A                     _putch:
  2384                           	opt stack 25
  2385                           
  2386                           ;incstack = 0
  2387                           ;putch@data stored from wreg
  2388  000C1A  6E27               	movwf	putch@data,c
  2389                           
  2390                           ;lcd.c: 31: LATDbits.LATD2 = 1;
  2391  000C1C  848C               	bsf	3980,2,c	;volatile
  2392                           
  2393                           ;lcd.c: 32: lcdNibble(data);
  2394  000C1E  5027               	movf	putch@data,w,c
  2395  000C20  EC27  F005         	call	_lcdNibble
  2396  000C24  0012               	return		;funcret
  2397  000C26                     __end_of_putch:
  2398                           	opt stack 0
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           prodh	equ	0xFF4
  2404                           prodl	equ	0xFF3
  2405                           intcon	equ	0xFF2
  2406                           intcon3	equ	0xFF0
  2407                           postinc0	equ	0xFEE
  2408                           wreg	equ	0xFE8
  2409                           indf2	equ	0xFDF
  2410                           postinc2	equ	0xFDE
  2411                           postdec2	equ	0xFDD
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _isdigit *****************
  2417 ;; Defined at:
  2418 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  c               1    wreg     unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  c               1   38[COMRAM] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;Total ram usage:        3 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    3
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_printf
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text3
  2447  000BEA                     __ptext3:
  2448                           	opt stack 0
  2449  000BEA                     _isdigit:
  2450                           	opt stack 26
  2451                           
  2452                           ;incstack = 0
  2453                           ;isdigit@c stored from wreg
  2454  000BEA  6E27               	movwf	isdigit@c,c
  2455  000BEC  0E00               	movlw	0
  2456  000BEE  6E26               	movwf	_isdigit$674,c
  2457  000BF0  0E3A               	movlw	58
  2458  000BF2  6027               	cpfslt	isdigit@c,c
  2459  000BF4  D005               	goto	l1962
  2460  000BF6  0E2F               	movlw	47
  2461  000BF8  6427               	cpfsgt	isdigit@c,c
  2462  000BFA  D002               	goto	l1962
  2463  000BFC  0E01               	movlw	1
  2464  000BFE  6E26               	movwf	_isdigit$674,c
  2465  000C00                     l1962:
  2466  000C00  C026  F025         	movff	_isdigit$674,??_isdigit
  2467  000C04  3025               	rrcf	??_isdigit,w,c
  2468  000C06  0012               	return	
  2469  000C08                     __end_of_isdigit:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           prodh	equ	0xFF4
  2476                           prodl	equ	0xFF3
  2477                           intcon	equ	0xFF2
  2478                           intcon3	equ	0xFF0
  2479                           postinc0	equ	0xFEE
  2480                           wreg	equ	0xFE8
  2481                           indf2	equ	0xFDF
  2482                           postinc2	equ	0xFDE
  2483                           postdec2	equ	0xFDD
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function ___wmul *****************
  2489 ;; Defined at:
  2490 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  multiplier      2   36[COMRAM] unsigned int 
  2493 ;;  multiplicand    2   38[COMRAM] unsigned int 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  product         2   40[COMRAM] unsigned int 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2   36[COMRAM] unsigned int 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, prodl, prodh
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;Total ram usage:        6 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    3
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_printf
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text4
  2520  000B9E                     __ptext4:
  2521                           	opt stack 0
  2522  000B9E                     ___wmul:
  2523                           	opt stack 26
  2524                           
  2525                           ;incstack = 0
  2526  000B9E  5025               	movf	___wmul@multiplier,w,c
  2527  000BA0  0227               	mulwf	___wmul@multiplicand,c
  2528  000BA2  CFF3 F029          	movff	prodl,___wmul@product
  2529  000BA6  CFF4 F02A          	movff	prodh,___wmul@product+1
  2530  000BAA  5025               	movf	___wmul@multiplier,w,c
  2531  000BAC  0228               	mulwf	___wmul@multiplicand+1,c
  2532  000BAE  50F3               	movf	prodl,w,c
  2533  000BB0  262A               	addwf	___wmul@product+1,f,c
  2534  000BB2  5026               	movf	___wmul@multiplier+1,w,c
  2535  000BB4  0227               	mulwf	___wmul@multiplicand,c
  2536  000BB6  50F3               	movf	prodl,w,c
  2537  000BB8  262A               	addwf	___wmul@product+1,f,c
  2538  000BBA  C029  F025         	movff	___wmul@product,?___wmul
  2539  000BBE  C02A  F026         	movff	___wmul@product+1,?___wmul+1
  2540  000BC2  0012               	return	
  2541  000BC4                     __end_of___wmul:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           intcon3	equ	0xFF0
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           indf2	equ	0xFDF
  2554                           postinc2	equ	0xFDE
  2555                           postdec2	equ	0xFDD
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function ___lwmod *****************
  2561 ;; Defined at:
  2562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  dividend        2   43[COMRAM] unsigned int 
  2565 ;;  divisor         2   45[COMRAM] unsigned int 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  counter         1   47[COMRAM] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  2   43[COMRAM] unsigned int 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        5 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    3
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_printf
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text5
  2592  000B2A                     __ptext5:
  2593                           	opt stack 0
  2594  000B2A                     ___lwmod:
  2595                           	opt stack 26
  2596                           
  2597                           ;incstack = 0
  2598  000B2A  502E               	movf	___lwmod@divisor,w,c
  2599  000B2C  102F               	iorwf	___lwmod@divisor+1,w,c
  2600  000B2E  B4D8               	btfsc	status,2,c
  2601  000B30  D018               	goto	l739
  2602  000B32  0E01               	movlw	1
  2603  000B34  6E30               	movwf	___lwmod@counter,c
  2604  000B36  D004               	goto	l2022
  2605  000B38                     l2020:
  2606  000B38  90D8               	bcf	status,0,c
  2607  000B3A  362E               	rlcf	___lwmod@divisor,f,c
  2608  000B3C  362F               	rlcf	___lwmod@divisor+1,f,c
  2609  000B3E  2A30               	incf	___lwmod@counter,f,c
  2610  000B40                     l2022:
  2611  000B40  AE2F               	btfss	___lwmod@divisor+1,7,c
  2612  000B42  D7FA               	goto	l2020
  2613  000B44                     l2024:
  2614  000B44  502E               	movf	___lwmod@divisor,w,c
  2615  000B46  5C2C               	subwf	___lwmod@dividend,w,c
  2616  000B48  502F               	movf	___lwmod@divisor+1,w,c
  2617  000B4A  582D               	subwfb	___lwmod@dividend+1,w,c
  2618  000B4C  A0D8               	btfss	status,0,c
  2619  000B4E  D004               	goto	l2028
  2620  000B50  502E               	movf	___lwmod@divisor,w,c
  2621  000B52  5E2C               	subwf	___lwmod@dividend,f,c
  2622  000B54  502F               	movf	___lwmod@divisor+1,w,c
  2623  000B56  5A2D               	subwfb	___lwmod@dividend+1,f,c
  2624  000B58                     l2028:
  2625  000B58  90D8               	bcf	status,0,c
  2626  000B5A  322F               	rrcf	___lwmod@divisor+1,f,c
  2627  000B5C  322E               	rrcf	___lwmod@divisor,f,c
  2628  000B5E  2E30               	decfsz	___lwmod@counter,f,c
  2629  000B60  D7F1               	goto	l2024
  2630  000B62                     l739:
  2631  000B62  C02C  F02C         	movff	___lwmod@dividend,?___lwmod
  2632  000B66  C02D  F02D         	movff	___lwmod@dividend+1,?___lwmod+1
  2633  000B6A  0012               	return		;funcret
  2634  000B6C                     __end_of___lwmod:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           prodh	equ	0xFF4
  2641                           prodl	equ	0xFF3
  2642                           intcon	equ	0xFF2
  2643                           intcon3	equ	0xFF0
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           indf2	equ	0xFDF
  2647                           postinc2	equ	0xFDE
  2648                           postdec2	equ	0xFDD
  2649                           fsr2h	equ	0xFDA
  2650                           fsr2l	equ	0xFD9
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function ___lwdiv *****************
  2654 ;; Defined at:
  2655 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  dividend        2   36[COMRAM] unsigned int 
  2658 ;;  divisor         2   38[COMRAM] unsigned int 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  quotient        2   41[COMRAM] unsigned int 
  2661 ;;  counter         1   40[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  2   36[COMRAM] unsigned int 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;Total ram usage:        7 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    3
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_printf
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text6
  2686  0009FC                     __ptext6:
  2687                           	opt stack 0
  2688  0009FC                     ___lwdiv:
  2689                           	opt stack 26
  2690                           
  2691                           ;incstack = 0
  2692  0009FC  0E00               	movlw	0
  2693  0009FE  6E2B               	movwf	___lwdiv@quotient+1,c
  2694  000A00  0E00               	movlw	0
  2695  000A02  6E2A               	movwf	___lwdiv@quotient,c
  2696  000A04  5027               	movf	___lwdiv@divisor,w,c
  2697  000A06  1028               	iorwf	___lwdiv@divisor+1,w,c
  2698  000A08  B4D8               	btfsc	status,2,c
  2699  000A0A  D01C               	goto	l729
  2700  000A0C  0E01               	movlw	1
  2701  000A0E  6E29               	movwf	___lwdiv@counter,c
  2702  000A10  D004               	goto	l2002
  2703  000A12                     l2000:
  2704  000A12  90D8               	bcf	status,0,c
  2705  000A14  3627               	rlcf	___lwdiv@divisor,f,c
  2706  000A16  3628               	rlcf	___lwdiv@divisor+1,f,c
  2707  000A18  2A29               	incf	___lwdiv@counter,f,c
  2708  000A1A                     l2002:
  2709  000A1A  AE28               	btfss	___lwdiv@divisor+1,7,c
  2710  000A1C  D7FA               	goto	l2000
  2711  000A1E                     l2004:
  2712  000A1E  90D8               	bcf	status,0,c
  2713  000A20  362A               	rlcf	___lwdiv@quotient,f,c
  2714  000A22  362B               	rlcf	___lwdiv@quotient+1,f,c
  2715  000A24  5027               	movf	___lwdiv@divisor,w,c
  2716  000A26  5C25               	subwf	___lwdiv@dividend,w,c
  2717  000A28  5028               	movf	___lwdiv@divisor+1,w,c
  2718  000A2A  5826               	subwfb	___lwdiv@dividend+1,w,c
  2719  000A2C  A0D8               	btfss	status,0,c
  2720  000A2E  D005               	goto	l2012
  2721  000A30  5027               	movf	___lwdiv@divisor,w,c
  2722  000A32  5E25               	subwf	___lwdiv@dividend,f,c
  2723  000A34  5028               	movf	___lwdiv@divisor+1,w,c
  2724  000A36  5A26               	subwfb	___lwdiv@dividend+1,f,c
  2725  000A38  802A               	bsf	___lwdiv@quotient,0,c
  2726  000A3A                     l2012:
  2727  000A3A  90D8               	bcf	status,0,c
  2728  000A3C  3228               	rrcf	___lwdiv@divisor+1,f,c
  2729  000A3E  3227               	rrcf	___lwdiv@divisor,f,c
  2730  000A40  2E29               	decfsz	___lwdiv@counter,f,c
  2731  000A42  D7ED               	goto	l2004
  2732  000A44                     l729:
  2733  000A44  C02A  F025         	movff	___lwdiv@quotient,?___lwdiv
  2734  000A48  C02B  F026         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2735  000A4C  0012               	return		;funcret
  2736  000A4E                     __end_of___lwdiv:
  2737                           	opt stack 0
  2738                           tblptru	equ	0xFF8
  2739                           tblptrh	equ	0xFF7
  2740                           tblptrl	equ	0xFF6
  2741                           tablat	equ	0xFF5
  2742                           prodh	equ	0xFF4
  2743                           prodl	equ	0xFF3
  2744                           intcon	equ	0xFF2
  2745                           intcon3	equ	0xFF0
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           indf2	equ	0xFDF
  2749                           postinc2	equ	0xFDE
  2750                           postdec2	equ	0xFDD
  2751                           fsr2h	equ	0xFDA
  2752                           fsr2l	equ	0xFD9
  2753                           status	equ	0xFD8
  2754                           
  2755 ;; *************** function _initLCD *****************
  2756 ;; Defined at:
  2757 ;;		line 14 in file "../lcd.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;Total ram usage:        1 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    5
  2778 ;; This function calls:
  2779 ;;		_lcdInst
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text7
  2786  000AE4                     __ptext7:
  2787                           	opt stack 0
  2788  000AE4                     _initLCD:
  2789                           	opt stack 25
  2790                           
  2791                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  2792                           
  2793                           ;incstack = 0
  2794  000AE4  0E31               	movlw	49
  2795  000AE6  6E28               	movwf	??_initLCD& (0+255),c
  2796  000AE8  0EB2               	movlw	178
  2797  000AEA                     u2017:
  2798  000AEA  2EE8               	decfsz	wreg,f,c
  2799  000AEC  D7FE               	bra	u2017
  2800  000AEE  2E28               	decfsz	??_initLCD& (0+255),f,c
  2801  000AF0  D7FC               	bra	u2017
  2802  000AF2  D000               	nop2	
  2803                           
  2804                           ;lcd.c: 16: lcdInst(0b00110011);
  2805  000AF4  0E33               	movlw	51
  2806  000AF6  EC13  F006         	call	_lcdInst
  2807                           
  2808                           ;lcd.c: 17: lcdInst(0b00110010);
  2809  000AFA  0E32               	movlw	50
  2810  000AFC  EC13  F006         	call	_lcdInst
  2811                           
  2812                           ;lcd.c: 18: lcdInst(0b00101000);
  2813  000B00  0E28               	movlw	40
  2814  000B02  EC13  F006         	call	_lcdInst
  2815                           
  2816                           ;lcd.c: 19: lcdInst(0b00001111);
  2817  000B06  0E0F               	movlw	15
  2818  000B08  EC13  F006         	call	_lcdInst
  2819                           
  2820                           ;lcd.c: 20: lcdInst(0b00000110);
  2821  000B0C  0E06               	movlw	6
  2822  000B0E  EC13  F006         	call	_lcdInst
  2823                           
  2824                           ;lcd.c: 21: lcdInst(0b00000001);
  2825  000B12  0E01               	movlw	1
  2826  000B14  EC13  F006         	call	_lcdInst
  2827                           
  2828                           ;lcd.c: 22: _delay((unsigned long)((15)*(10000000/4000.0)));
  2829  000B18  0E31               	movlw	49
  2830  000B1A  6E28               	movwf	??_initLCD& (0+255),c
  2831  000B1C  0EB2               	movlw	178
  2832  000B1E                     u2027:
  2833  000B1E  2EE8               	decfsz	wreg,f,c
  2834  000B20  D7FE               	bra	u2027
  2835  000B22  2E28               	decfsz	??_initLCD& (0+255),f,c
  2836  000B24  D7FC               	bra	u2027
  2837  000B26  D000               	nop2	
  2838  000B28  0012               	return		;funcret
  2839  000B2A                     __end_of_initLCD:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           intcon	equ	0xFF2
  2848                           intcon3	equ	0xFF0
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           indf2	equ	0xFDF
  2852                           postinc2	equ	0xFDE
  2853                           postdec2	equ	0xFDD
  2854                           fsr2h	equ	0xFDA
  2855                           fsr2l	equ	0xFD9
  2856                           status	equ	0xFD8
  2857                           
  2858 ;; *************** function _lcdInst *****************
  2859 ;; Defined at:
  2860 ;;		line 25 in file "../lcd.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  data            1    wreg     unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  data            1   38[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:        1 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    4
  2881 ;; This function calls:
  2882 ;;		_lcdNibble
  2883 ;; This function is called by:
  2884 ;;		_initLCD
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text8
  2890  000C26                     __ptext8:
  2891                           	opt stack 0
  2892  000C26                     _lcdInst:
  2893                           	opt stack 26
  2894                           
  2895                           ;incstack = 0
  2896                           ;lcdInst@data stored from wreg
  2897  000C26  6E27               	movwf	lcdInst@data,c
  2898                           
  2899                           ;lcd.c: 26: LATDbits.LATD2 = 0;
  2900  000C28  948C               	bcf	3980,2,c	;volatile
  2901                           
  2902                           ;lcd.c: 27: lcdNibble(data);
  2903  000C2A  5027               	movf	lcdInst@data,w,c
  2904  000C2C  EC27  F005         	call	_lcdNibble
  2905  000C30  0012               	return		;funcret
  2906  000C32                     __end_of_lcdInst:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           intcon	equ	0xFF2
  2915                           intcon3	equ	0xFF0
  2916                           postinc0	equ	0xFEE
  2917                           wreg	equ	0xFE8
  2918                           indf2	equ	0xFDF
  2919                           postinc2	equ	0xFDE
  2920                           postdec2	equ	0xFDD
  2921                           fsr2h	equ	0xFDA
  2922                           fsr2l	equ	0xFD9
  2923                           status	equ	0xFD8
  2924                           
  2925 ;; *************** function _lcdNibble *****************
  2926 ;; Defined at:
  2927 ;;		line 35 in file "../lcd.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  data            1    wreg     unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  data            1   37[COMRAM] unsigned char 
  2932 ;;  temp            1   36[COMRAM] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    3
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_lcdInst
  2953 ;;		_putch
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text9
  2958  000A4E                     __ptext9:
  2959                           	opt stack 0
  2960  000A4E                     _lcdNibble:
  2961                           	opt stack 25
  2962                           
  2963                           ;incstack = 0
  2964                           ;lcdNibble@data stored from wreg
  2965  000A4E  6E26               	movwf	lcdNibble@data,c
  2966                           
  2967                           ;lcd.c: 37: char temp = data & 0xF0;
  2968  000A50  5026               	movf	lcdNibble@data,w,c
  2969  000A52  0BF0               	andlw	240
  2970  000A54  6E25               	movwf	lcdNibble@temp,c
  2971                           
  2972                           ;lcd.c: 38: LATD = LATD & 0x0F;
  2973  000A56  508C               	movf	3980,w,c	;volatile
  2974  000A58  0B0F               	andlw	15
  2975  000A5A  6E8C               	movwf	3980,c	;volatile
  2976                           
  2977                           ;lcd.c: 39: LATD = temp | LATD;
  2978  000A5C  5025               	movf	lcdNibble@temp,w,c
  2979  000A5E  108C               	iorwf	3980,w,c	;volatile
  2980  000A60  6E8C               	movwf	3980,c	;volatile
  2981                           
  2982                           ;lcd.c: 41: LATDbits.LATD3 = 0;
  2983  000A62  968C               	bcf	3980,3,c	;volatile
  2984                           
  2985                           ;lcd.c: 42: _delay((unsigned long)((30)*(10000000/4000000.0)));
  2986  000A64  0E19               	movlw	25
  2987  000A66                     u2037:
  2988  000A66  2EE8               	decfsz	wreg,f,c
  2989  000A68  D7FE               	bra	u2037
  2990                           
  2991                           ;lcd.c: 43: LATDbits.LATD3 = 1;
  2992  000A6A  868C               	bsf	3980,3,c	;volatile
  2993                           
  2994                           ;lcd.c: 44: _delay((unsigned long)((30)*(10000000/4000000.0)));
  2995  000A6C  0E19               	movlw	25
  2996  000A6E                     u2047:
  2997  000A6E  2EE8               	decfsz	wreg,f,c
  2998  000A70  D7FE               	bra	u2047
  2999                           
  3000                           ;lcd.c: 46: data = data << 4;
  3001  000A72  3826               	swapf	lcdNibble@data,w,c
  3002  000A74  0BF0               	andlw	240
  3003  000A76  6E26               	movwf	lcdNibble@data,c
  3004                           
  3005                           ;lcd.c: 48: temp = data & 0xF0;
  3006  000A78  5026               	movf	lcdNibble@data,w,c
  3007  000A7A  0BF0               	andlw	240
  3008  000A7C  6E25               	movwf	lcdNibble@temp,c
  3009                           
  3010                           ;lcd.c: 49: LATD = LATD & 0x0F;
  3011  000A7E  508C               	movf	3980,w,c	;volatile
  3012  000A80  0B0F               	andlw	15
  3013  000A82  6E8C               	movwf	3980,c	;volatile
  3014                           
  3015                           ;lcd.c: 50: LATD = temp | LATD;
  3016  000A84  5025               	movf	lcdNibble@temp,w,c
  3017  000A86  108C               	iorwf	3980,w,c	;volatile
  3018  000A88  6E8C               	movwf	3980,c	;volatile
  3019                           
  3020                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  3021  000A8A  968C               	bcf	3980,3,c	;volatile
  3022                           
  3023                           ;lcd.c: 53: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3024  000A8C  0E19               	movlw	25
  3025  000A8E                     u2057:
  3026  000A8E  2EE8               	decfsz	wreg,f,c
  3027  000A90  D7FE               	bra	u2057
  3028                           
  3029                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  3030  000A92  868C               	bsf	3980,3,c	;volatile
  3031                           
  3032                           ;lcd.c: 55: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3033  000A94  0E19               	movlw	25
  3034  000A96                     u2067:
  3035  000A96  2EE8               	decfsz	wreg,f,c
  3036  000A98  D7FE               	bra	u2067
  3037  000A9A  0012               	return		;funcret
  3038  000A9C                     __end_of_lcdNibble:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           intcon	equ	0xFF2
  3047                           intcon3	equ	0xFF0
  3048                           postinc0	equ	0xFEE
  3049                           wreg	equ	0xFE8
  3050                           indf2	equ	0xFDF
  3051                           postinc2	equ	0xFDE
  3052                           postdec2	equ	0xFDD
  3053                           fsr2h	equ	0xFDA
  3054                           fsr2l	equ	0xFD9
  3055                           status	equ	0xFD8
  3056                           
  3057 ;; *************** function _I2C_Master_Write *****************
  3058 ;; Defined at:
  3059 ;;		line 47 in file "../I2C.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  d               2   37[COMRAM] unsigned int 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;Total ram usage:        2 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    4
  3080 ;; This function calls:
  3081 ;;		_I2C_Master_Wait
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text10
  3088  000C32                     __ptext10:
  3089                           	opt stack 0
  3090  000C32                     _I2C_Master_Write:
  3091                           	opt stack 26
  3092                           
  3093                           ;I2C.c: 49: I2C_Master_Wait();
  3094                           
  3095                           ;incstack = 0
  3096  000C32  EC04  F006         	call	_I2C_Master_Wait	;wreg free
  3097                           
  3098                           ;I2C.c: 50: SSPBUF = d;
  3099  000C36  C026  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3100  000C3A  0012               	return		;funcret
  3101  000C3C                     __end_of_I2C_Master_Write:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           tblptrh	equ	0xFF7
  3105                           tblptrl	equ	0xFF6
  3106                           tablat	equ	0xFF5
  3107                           prodh	equ	0xFF4
  3108                           prodl	equ	0xFF3
  3109                           intcon	equ	0xFF2
  3110                           intcon3	equ	0xFF0
  3111                           postinc0	equ	0xFEE
  3112                           wreg	equ	0xFE8
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _I2C_Master_Stop *****************
  3121 ;; Defined at:
  3122 ;;		line 41 in file "../I2C.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    4
  3143 ;; This function calls:
  3144 ;;		_I2C_Master_Wait
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text11
  3151  000C3C                     __ptext11:
  3152                           	opt stack 0
  3153  000C3C                     _I2C_Master_Stop:
  3154                           	opt stack 26
  3155                           
  3156                           ;I2C.c: 43: I2C_Master_Wait();
  3157                           
  3158                           ;incstack = 0
  3159  000C3C  EC04  F006         	call	_I2C_Master_Wait	;wreg free
  3160                           
  3161                           ;I2C.c: 44: PEN = 1;
  3162  000C40  84C5               	bsf	4037,2,c	;volatile
  3163  000C42  0012               	return		;funcret
  3164  000C44                     __end_of_I2C_Master_Stop:
  3165                           	opt stack 0
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           prodh	equ	0xFF4
  3171                           prodl	equ	0xFF3
  3172                           intcon	equ	0xFF2
  3173                           intcon3	equ	0xFF0
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           indf2	equ	0xFDF
  3177                           postinc2	equ	0xFDE
  3178                           postdec2	equ	0xFDD
  3179                           fsr2h	equ	0xFDA
  3180                           fsr2l	equ	0xFD9
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _I2C_Master_Start *****************
  3184 ;; Defined at:
  3185 ;;		line 29 in file "../I2C.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    4
  3206 ;; This function calls:
  3207 ;;		_I2C_Master_Wait
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text12
  3214  000C44                     __ptext12:
  3215                           	opt stack 0
  3216  000C44                     _I2C_Master_Start:
  3217                           	opt stack 26
  3218                           
  3219                           ;I2C.c: 31: I2C_Master_Wait();
  3220                           
  3221                           ;incstack = 0
  3222  000C44  EC04  F006         	call	_I2C_Master_Wait	;wreg free
  3223                           
  3224                           ;I2C.c: 32: SEN = 1;
  3225  000C48  80C5               	bsf	4037,0,c	;volatile
  3226  000C4A  0012               	return		;funcret
  3227  000C4C                     __end_of_I2C_Master_Start:
  3228                           	opt stack 0
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon	equ	0xFF2
  3236                           intcon3	equ	0xFF0
  3237                           postinc0	equ	0xFEE
  3238                           wreg	equ	0xFE8
  3239                           indf2	equ	0xFDF
  3240                           postinc2	equ	0xFDE
  3241                           postdec2	equ	0xFDD
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _I2C_Master_Read *****************
  3247 ;; Defined at:
  3248 ;;		line 53 in file "../I2C.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  a               1    wreg     unsigned char 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  a               1   37[COMRAM] unsigned char 
  3253 ;;  temp            1   38[COMRAM] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      unsigned char 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;Total ram usage:        2 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    4
  3270 ;; This function calls:
  3271 ;;		_I2C_Master_Wait
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text13
  3278  000BC4                     __ptext13:
  3279                           	opt stack 0
  3280  000BC4                     _I2C_Master_Read:
  3281                           	opt stack 26
  3282                           
  3283                           ;incstack = 0
  3284                           ;I2C_Master_Read@a stored from wreg
  3285  000BC4  6E26               	movwf	I2C_Master_Read@a,c
  3286                           
  3287                           ;I2C.c: 55: unsigned char temp;
  3288                           ;I2C.c: 56: I2C_Master_Wait();
  3289  000BC6  EC04  F006         	call	_I2C_Master_Wait	;wreg free
  3290                           
  3291                           ;I2C.c: 57: RCEN = 1;
  3292  000BCA  86C5               	bsf	4037,3,c	;volatile
  3293                           
  3294                           ;I2C.c: 58: I2C_Master_Wait();
  3295  000BCC  EC04  F006         	call	_I2C_Master_Wait	;wreg free
  3296                           
  3297                           ;I2C.c: 59: temp = SSPBUF;
  3298  000BD0  CFC9 F027          	movff	4041,I2C_Master_Read@temp	;volatile
  3299                           
  3300                           ;I2C.c: 60: I2C_Master_Wait();
  3301  000BD4  EC04  F006         	call	_I2C_Master_Wait	;wreg free
  3302                           
  3303                           ;I2C.c: 61: ACKDT = (a)?0:1;
  3304  000BD8  5026               	movf	I2C_Master_Read@a,w,c
  3305  000BDA  A4D8               	btfss	status,2,c
  3306  000BDC  D002               	goto	u1560
  3307  000BDE  8AC5               	bsf	4037,5,c	;volatile
  3308  000BE0  D001               	goto	l2060
  3309  000BE2                     u1560:
  3310  000BE2  9AC5               	bcf	4037,5,c	;volatile
  3311  000BE4                     l2060:
  3312                           
  3313                           ;I2C.c: 62: ACKEN = 1;
  3314  000BE4  88C5               	bsf	4037,4,c	;volatile
  3315                           
  3316                           ;I2C.c: 63: return temp;
  3317  000BE6  5027               	movf	I2C_Master_Read@temp,w,c
  3318  000BE8  0012               	return	
  3319  000BEA                     __end_of_I2C_Master_Read:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           prodh	equ	0xFF4
  3326                           prodl	equ	0xFF3
  3327                           intcon	equ	0xFF2
  3328                           intcon3	equ	0xFF0
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           indf2	equ	0xFDF
  3332                           postinc2	equ	0xFDE
  3333                           postdec2	equ	0xFDD
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _I2C_Master_Wait *****************
  3339 ;; Defined at:
  3340 ;;		line 24 in file "../I2C.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:        1 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    3
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_I2C_Master_Start
  3365 ;;		_I2C_Master_Stop
  3366 ;;		_I2C_Master_Write
  3367 ;;		_I2C_Master_Read
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text14
  3372  000C08                     __ptext14:
  3373                           	opt stack 0
  3374  000C08                     _I2C_Master_Wait:
  3375                           	opt stack 26
  3376  000C08                     l30:
  3377  000C08  B4C7               	btfsc	4039,2,c	;volatile
  3378  000C0A  D7FE               	goto	l30
  3379  000C0C  CFC5 F025          	movff	4037,??_I2C_Master_Wait	;volatile
  3380  000C10  0E1F               	movlw	31
  3381  000C12  1625               	andwf	??_I2C_Master_Wait,f,c
  3382  000C14  B4D8               	btfsc	status,2,c
  3383  000C16  0012               	return	
  3384  000C18  D7F7               	goto	l30
  3385  000C1A                     __end_of_I2C_Master_Wait:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           tblptrh	equ	0xFF7
  3389                           tblptrl	equ	0xFF6
  3390                           tablat	equ	0xFF5
  3391                           prodh	equ	0xFF4
  3392                           prodl	equ	0xFF3
  3393                           intcon	equ	0xFF2
  3394                           intcon3	equ	0xFF0
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           indf2	equ	0xFDF
  3398                           postinc2	equ	0xFDE
  3399                           postdec2	equ	0xFDD
  3400                           fsr2h	equ	0xFDA
  3401                           fsr2l	equ	0xFD9
  3402                           status	equ	0xFD8
  3403                           
  3404 ;; *************** function _I2C_Master_Init *****************
  3405 ;; Defined at:
  3406 ;;		line 13 in file "../I2C.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  c               4   49[COMRAM] const unsigned long 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;Total ram usage:        8 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    4
  3427 ;; This function calls:
  3428 ;;		___lldiv
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text15
  3435  0009A0                     __ptext15:
  3436                           	opt stack 0
  3437  0009A0                     _I2C_Master_Init:
  3438                           	opt stack 26
  3439                           
  3440                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  3441                           
  3442                           ;incstack = 0
  3443  0009A0  0E00               	movlw	0
  3444  0009A2  6EC7               	movwf	4039,c	;volatile
  3445                           
  3446                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  3447  0009A4  0E28               	movlw	40
  3448  0009A6  6EC6               	movwf	4038,c	;volatile
  3449                           
  3450                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  3451  0009A8  0E00               	movlw	0
  3452  0009AA  6EC5               	movwf	4037,c	;volatile
  3453                           
  3454                           ;I2C.c: 19: SSPADD = (10000000/(4*c))-1;
  3455  0009AC  0E80               	movlw	128
  3456  0009AE  6E25               	movwf	___lldiv@dividend,c
  3457  0009B0  0E96               	movlw	150
  3458  0009B2  6E26               	movwf	___lldiv@dividend+1,c
  3459  0009B4  0E98               	movlw	152
  3460  0009B6  6E27               	movwf	___lldiv@dividend+2,c
  3461  0009B8  0E00               	movlw	0
  3462  0009BA  6E28               	movwf	___lldiv@dividend+3,c
  3463  0009BC  C032  F080         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  3464  0009C0  C033  F081         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  3465  0009C4  C034  F082         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  3466  0009C8  C035  F083         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  3467  0009CC  0E02               	movlw	2
  3468  0009CE                     u1555:
  3469  0009CE  90D8               	bcf	status,0,c
  3470  0009D0  0100               	movlb	0	; () banked
  3471  0009D2  3780               	rlcf	??_I2C_Master_Init& (0+255),f,b
  3472  0009D4  3781               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  3473  0009D6  3782               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  3474  0009D8  3783               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  3475  0009DA  2EE8               	decfsz	wreg,f,c
  3476  0009DC  D7F8               	goto	u1555
  3477  0009DE  C080  F029         	movff	??_I2C_Master_Init,___lldiv@divisor
  3478  0009E2  C081  F02A         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3479  0009E6  C082  F02B         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3480  0009EA  C083  F02C         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3481  0009EE  EC8F  F004         	call	___lldiv	;wreg free
  3482  0009F2  0425               	decf	?___lldiv,w,c
  3483  0009F4  6EC8               	movwf	4040,c	;volatile
  3484                           
  3485                           ;I2C.c: 20: TRISC3 = 1;
  3486  0009F6  8694               	bsf	3988,3,c	;volatile
  3487                           
  3488                           ;I2C.c: 21: TRISC4 = 1;
  3489  0009F8  8894               	bsf	3988,4,c	;volatile
  3490  0009FA  0012               	return		;funcret
  3491  0009FC                     __end_of_I2C_Master_Init:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           intcon3	equ	0xFF0
  3501                           postinc0	equ	0xFEE
  3502                           wreg	equ	0xFE8
  3503                           indf2	equ	0xFDF
  3504                           postinc2	equ	0xFDE
  3505                           postdec2	equ	0xFDD
  3506                           fsr2h	equ	0xFDA
  3507                           fsr2l	equ	0xFD9
  3508                           status	equ	0xFD8
  3509                           
  3510 ;; *************** function ___lldiv *****************
  3511 ;; Defined at:
  3512 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  dividend        4   36[COMRAM] unsigned long 
  3515 ;;  divisor         4   40[COMRAM] unsigned long 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  quotient        4   44[COMRAM] unsigned long 
  3518 ;;  counter         1   48[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  4   36[COMRAM] unsigned long 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:       13 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    3
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_I2C_Master_Init
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text16
  3543  00091E                     __ptext16:
  3544                           	opt stack 0
  3545  00091E                     ___lldiv:
  3546                           	opt stack 26
  3547                           
  3548                           ;incstack = 0
  3549  00091E  0E00               	movlw	0
  3550  000920  6E2D               	movwf	___lldiv@quotient,c
  3551  000922  0E00               	movlw	0
  3552  000924  6E2E               	movwf	___lldiv@quotient+1,c
  3553  000926  0E00               	movlw	0
  3554  000928  6E2F               	movwf	___lldiv@quotient+2,c
  3555  00092A  0E00               	movlw	0
  3556  00092C  6E30               	movwf	___lldiv@quotient+3,c
  3557  00092E  5029               	movf	___lldiv@divisor,w,c
  3558  000930  102A               	iorwf	___lldiv@divisor+1,w,c
  3559  000932  102B               	iorwf	___lldiv@divisor+2,w,c
  3560  000934  102C               	iorwf	___lldiv@divisor+3,w,c
  3561  000936  B4D8               	btfsc	status,2,c
  3562  000938  D02A               	goto	l676
  3563  00093A  0E01               	movlw	1
  3564  00093C  6E31               	movwf	___lldiv@counter,c
  3565  00093E  D006               	goto	l1980
  3566  000940                     l1978:
  3567  000940  90D8               	bcf	status,0,c
  3568  000942  3629               	rlcf	___lldiv@divisor,f,c
  3569  000944  362A               	rlcf	___lldiv@divisor+1,f,c
  3570  000946  362B               	rlcf	___lldiv@divisor+2,f,c
  3571  000948  362C               	rlcf	___lldiv@divisor+3,f,c
  3572  00094A  2A31               	incf	___lldiv@counter,f,c
  3573  00094C                     l1980:
  3574  00094C  AE2C               	btfss	___lldiv@divisor+3,7,c
  3575  00094E  D7F8               	goto	l1978
  3576  000950                     l1982:
  3577  000950  90D8               	bcf	status,0,c
  3578  000952  362D               	rlcf	___lldiv@quotient,f,c
  3579  000954  362E               	rlcf	___lldiv@quotient+1,f,c
  3580  000956  362F               	rlcf	___lldiv@quotient+2,f,c
  3581  000958  3630               	rlcf	___lldiv@quotient+3,f,c
  3582  00095A  5029               	movf	___lldiv@divisor,w,c
  3583  00095C  5C25               	subwf	___lldiv@dividend,w,c
  3584  00095E  502A               	movf	___lldiv@divisor+1,w,c
  3585  000960  5826               	subwfb	___lldiv@dividend+1,w,c
  3586  000962  502B               	movf	___lldiv@divisor+2,w,c
  3587  000964  5827               	subwfb	___lldiv@dividend+2,w,c
  3588  000966  502C               	movf	___lldiv@divisor+3,w,c
  3589  000968  5828               	subwfb	___lldiv@dividend+3,w,c
  3590  00096A  A0D8               	btfss	status,0,c
  3591  00096C  D009               	goto	l1990
  3592  00096E  5029               	movf	___lldiv@divisor,w,c
  3593  000970  5E25               	subwf	___lldiv@dividend,f,c
  3594  000972  502A               	movf	___lldiv@divisor+1,w,c
  3595  000974  5A26               	subwfb	___lldiv@dividend+1,f,c
  3596  000976  502B               	movf	___lldiv@divisor+2,w,c
  3597  000978  5A27               	subwfb	___lldiv@dividend+2,f,c
  3598  00097A  502C               	movf	___lldiv@divisor+3,w,c
  3599  00097C  5A28               	subwfb	___lldiv@dividend+3,f,c
  3600  00097E  802D               	bsf	___lldiv@quotient,0,c
  3601  000980                     l1990:
  3602  000980  90D8               	bcf	status,0,c
  3603  000982  322C               	rrcf	___lldiv@divisor+3,f,c
  3604  000984  322B               	rrcf	___lldiv@divisor+2,f,c
  3605  000986  322A               	rrcf	___lldiv@divisor+1,f,c
  3606  000988  3229               	rrcf	___lldiv@divisor,f,c
  3607  00098A  2E31               	decfsz	___lldiv@counter,f,c
  3608  00098C  D7E1               	goto	l1982
  3609  00098E                     l676:
  3610  00098E  C02D  F025         	movff	___lldiv@quotient,?___lldiv
  3611  000992  C02E  F026         	movff	___lldiv@quotient+1,?___lldiv+1
  3612  000996  C02F  F027         	movff	___lldiv@quotient+2,?___lldiv+2
  3613  00099A  C030  F028         	movff	___lldiv@quotient+3,?___lldiv+3
  3614  00099E  0012               	return		;funcret
  3615  0009A0                     __end_of___lldiv:
  3616                           	opt stack 0
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           prodh	equ	0xFF4
  3622                           prodl	equ	0xFF3
  3623                           intcon	equ	0xFF2
  3624                           intcon3	equ	0xFF0
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           fsr2h	equ	0xFDA
  3631                           fsr2l	equ	0xFD9
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function _lowISR *****************
  3635 ;; Defined at:
  3636 ;;		line 308 in file "../main.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		None
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;Total ram usage:       17 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    2
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		Interrupt level 1
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	intcodelo
  3665  000018                     __pintcodelo:
  3666                           	opt stack 0
  3667  000018                     _lowISR:
  3668                           	opt stack 25
  3669                           
  3670                           ;incstack = 0
  3671  000018  805B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3672  00001A  CFD8 F014          	movff	status,??_lowISR
  3673  00001E  CFE8 F015          	movff	wreg,??_lowISR+1
  3674  000022  CFE0 F016          	movff	bsr,??_lowISR+2
  3675  000026  CFFA F017          	movff	pclath,??_lowISR+3
  3676  00002A  CFFB F018          	movff	pclatu,??_lowISR+4
  3677  00002E  CFE9 F019          	movff	fsr0l,??_lowISR+5
  3678  000032  CFEA F01A          	movff	fsr0h,??_lowISR+6
  3679  000036  CFE1 F01B          	movff	fsr1l,??_lowISR+7
  3680  00003A  CFE2 F01C          	movff	fsr1h,??_lowISR+8
  3681  00003E  CFD9 F01D          	movff	fsr2l,??_lowISR+9
  3682  000042  CFDA F01E          	movff	fsr2h,??_lowISR+10
  3683  000046  CFF3 F01F          	movff	prodl,??_lowISR+11
  3684  00004A  CFF4 F020          	movff	prodh,??_lowISR+12
  3685  00004E  CFF6 F021          	movff	tblptrl,??_lowISR+13
  3686  000052  CFF7 F022          	movff	tblptrh,??_lowISR+14
  3687  000056  CFF8 F023          	movff	tblptru,??_lowISR+15
  3688  00005A  CFF5 F024          	movff	tablat,??_lowISR+16
  3689  00005E  C024  FFF5         	movff	??_lowISR+16,tablat
  3690  000062  C023  FFF8         	movff	??_lowISR+15,tblptru
  3691  000066  C022  FFF7         	movff	??_lowISR+14,tblptrh
  3692  00006A  C021  FFF6         	movff	??_lowISR+13,tblptrl
  3693  00006E  C020  FFF4         	movff	??_lowISR+12,prodh
  3694  000072  C01F  FFF3         	movff	??_lowISR+11,prodl
  3695  000076  C01E  FFDA         	movff	??_lowISR+10,fsr2h
  3696  00007A  C01D  FFD9         	movff	??_lowISR+9,fsr2l
  3697  00007E  C01C  FFE2         	movff	??_lowISR+8,fsr1h
  3698  000082  C01B  FFE1         	movff	??_lowISR+7,fsr1l
  3699  000086  C01A  FFEA         	movff	??_lowISR+6,fsr0h
  3700  00008A  C019  FFE9         	movff	??_lowISR+5,fsr0l
  3701  00008E  C018  FFFB         	movff	??_lowISR+4,pclatu
  3702  000092  C017  FFFA         	movff	??_lowISR+3,pclath
  3703  000096  C016  FFE0         	movff	??_lowISR+2,bsr
  3704  00009A  C015  FFE8         	movff	??_lowISR+1,wreg
  3705  00009E  C014  FFD8         	movff	??_lowISR,status
  3706  0000A2  905B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3707  0000A4  0010               	retfie	
  3708  0000A6                     __end_of_lowISR:
  3709                           	opt stack 0
  3710                           pclatu	equ	0xFFB
  3711                           pclath	equ	0xFFA
  3712                           tblptru	equ	0xFF8
  3713                           tblptrh	equ	0xFF7
  3714                           tblptrl	equ	0xFF6
  3715                           tablat	equ	0xFF5
  3716                           prodh	equ	0xFF4
  3717                           prodl	equ	0xFF3
  3718                           intcon	equ	0xFF2
  3719                           intcon3	equ	0xFF0
  3720                           postinc0	equ	0xFEE
  3721                           fsr0h	equ	0xFEA
  3722                           fsr0l	equ	0xFE9
  3723                           wreg	equ	0xFE8
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           bsr	equ	0xFE0
  3727                           indf2	equ	0xFDF
  3728                           postinc2	equ	0xFDE
  3729                           postdec2	equ	0xFDD
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734 ;; *************** function _highISR *****************
  3735 ;; Defined at:
  3736 ;;		line 227 in file "../main.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  keypress        1   18[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;Total ram usage:       16 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    1
  3757 ;; This function calls:
  3758 ;;		_switchMenu
  3759 ;; This function is called by:
  3760 ;;		Interrupt level 2
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	intcode
  3765  000008                     __pintcode:
  3766                           	opt stack 0
  3767  000008                     _highISR:
  3768                           	opt stack 25
  3769                           
  3770                           ;incstack = 0
  3771  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3772  00000A  EDEB  F003         	call	int_func,f	;refresh shadow registers
  3773                           pclatu	equ	0xFFB
  3774                           pclath	equ	0xFFA
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           intcon	equ	0xFF2
  3782                           intcon3	equ	0xFF0
  3783                           postinc0	equ	0xFEE
  3784                           fsr0h	equ	0xFEA
  3785                           fsr0l	equ	0xFE9
  3786                           wreg	equ	0xFE8
  3787                           fsr1h	equ	0xFE2
  3788                           fsr1l	equ	0xFE1
  3789                           bsr	equ	0xFE0
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797                           	psect	intcode_body
  3798  0007D6                     __pintcode_body:
  3799                           	opt stack 25
  3800  0007D6                     int_func:
  3801                           	opt stack 25
  3802  0007D6  0006               	pop		; remove dummy address from shadow register refresh
  3803  0007D8  CFFA F004          	movff	pclath,??_highISR
  3804  0007DC  CFFB F005          	movff	pclatu,??_highISR+1
  3805  0007E0  CFE9 F006          	movff	fsr0l,??_highISR+2
  3806  0007E4  CFEA F007          	movff	fsr0h,??_highISR+3
  3807  0007E8  CFE1 F008          	movff	fsr1l,??_highISR+4
  3808  0007EC  CFE2 F009          	movff	fsr1h,??_highISR+5
  3809  0007F0  CFD9 F00A          	movff	fsr2l,??_highISR+6
  3810  0007F4  CFDA F00B          	movff	fsr2h,??_highISR+7
  3811  0007F8  CFF3 F00C          	movff	prodl,??_highISR+8
  3812  0007FC  CFF4 F00D          	movff	prodh,??_highISR+9
  3813  000800  CFF6 F00E          	movff	tblptrl,??_highISR+10
  3814  000804  CFF7 F00F          	movff	tblptrh,??_highISR+11
  3815  000808  CFF8 F010          	movff	tblptru,??_highISR+12
  3816  00080C  CFF5 F011          	movff	tablat,??_highISR+13
  3817                           
  3818                           ;main.c: 228: if(INT1IF && (screenMode != 1)){
  3819  000810  A0F0               	btfss	intcon3,0,c	;volatile
  3820  000812  D041               	goto	i2l1902
  3821  000814  0459               	decf	_screenMode,w,c
  3822  000816  105A               	iorwf	_screenMode+1,w,c
  3823  000818  B4D8               	btfsc	status,2,c
  3824  00081A  D03D               	goto	i2l1902
  3825                           
  3826                           ;main.c: 229: unsigned char keypress = (PORTB & 0xF0) >> 4;
  3827  00081C  3881               	swapf	3969,w,c	;volatile
  3828  00081E  0B0F               	andlw	15
  3829  000820  0B0F               	andlw	15
  3830  000822  6E13               	movwf	highISR@keypress,c
  3831                           
  3832                           ;main.c: 230: if (keys[keypress] == '*'){
  3833  000824  5013               	movf	highISR@keypress,w,c
  3834  000826  0D01               	mullw	1
  3835  000828  0E7F               	movlw	low _keys
  3836  00082A  24F3               	addwf	prodl,w,c
  3837  00082C  6EF6               	movwf	tblptrl,c
  3838  00082E  0EFE               	movlw	high _keys
  3839  000830  20F4               	addwfc	prodh,w,c
  3840  000832  6EF7               	movwf	tblptrh,c
  3841  000834                     	if	0	;There are less than 3 active tblptr bytes
  3842  000834                     	endif
  3843  000834  0008               	tblrd		*
  3844  000836  50F5               	movf	tablat,w,c
  3845  000838  0A2A               	xorlw	42
  3846  00083A  A4D8               	btfss	status,2,c
  3847  00083C  D017               	goto	i2l1896
  3848                           
  3849                           ;main.c: 232: if(screenMode == 2){
  3850  00083E  0E02               	movlw	2
  3851  000840  1859               	xorwf	_screenMode,w,c
  3852  000842  105A               	iorwf	_screenMode+1,w,c
  3853  000844  A4D8               	btfss	status,2,c
  3854  000846  D009               	goto	i2l1892
  3855                           
  3856                           ;main.c: 233: screenMode = 1;
  3857  000848  0E00               	movlw	0
  3858  00084A  6E5A               	movwf	_screenMode+1,c
  3859  00084C  0E01               	movlw	1
  3860  00084E  6E59               	movwf	_screenMode,c
  3861                           
  3862                           ;main.c: 234: T0CONbits.TMR0ON = 1;
  3863  000850  8ED5               	bsf	4053,7,c	;volatile
  3864                           
  3865                           ;main.c: 235: LATC = LATC | 0b00000010;
  3866  000852  508B               	movf	3979,w,c	;volatile
  3867  000854  0902               	iorlw	2
  3868  000856  6E8B               	movwf	3979,c	;volatile
  3869                           
  3870                           ;main.c: 236: }
  3871  000858  D01D               	goto	i2l1900
  3872  00085A                     i2l1892:
  3873                           
  3874                           ;main.c: 237: else if (screenMode == 0)
  3875  00085A  5059               	movf	_screenMode,w,c
  3876  00085C  105A               	iorwf	_screenMode+1,w,c
  3877  00085E  A4D8               	btfss	status,2,c
  3878  000860  D019               	goto	i2l1900
  3879                           
  3880                           ;main.c: 238: screenMode = 2;
  3881  000862  0E00               	movlw	0
  3882  000864  6E5A               	movwf	_screenMode+1,c
  3883  000866  0E02               	movlw	2
  3884  000868  6E59               	movwf	_screenMode,c
  3885                           
  3886                           ;main.c: 239: }
  3887  00086A  D014               	goto	i2l1900
  3888  00086C                     i2l1896:
  3889                           
  3890                           ;main.c: 240: else if (screenMode != 0)
  3891  00086C  5059               	movf	_screenMode,w,c
  3892  00086E  105A               	iorwf	_screenMode+1,w,c
  3893  000870  B4D8               	btfsc	status,2,c
  3894  000872  D010               	goto	i2l1900
  3895                           
  3896                           ;main.c: 241: switchMenu('4', '6', keys[keypress]);
  3897  000874  0E36               	movlw	54
  3898  000876  6E01               	movwf	switchMenu@right,c
  3899  000878  5013               	movf	highISR@keypress,w,c
  3900  00087A  0D01               	mullw	1
  3901  00087C  0E7F               	movlw	low _keys
  3902  00087E  24F3               	addwf	prodl,w,c
  3903  000880  6EF6               	movwf	tblptrl,c
  3904  000882  0EFE               	movlw	high _keys
  3905  000884  20F4               	addwfc	prodh,w,c
  3906  000886  6EF7               	movwf	tblptrh,c
  3907  000888                     	if	0	;There are less than 3 active tblptr bytes
  3908  000888                     	endif
  3909  000888  0008               	tblrd		*
  3910  00088A  CFF5 F002          	movff	tablat,switchMenu@key
  3911  00088E  0E34               	movlw	52
  3912  000890  EC4E  F005         	call	_switchMenu
  3913  000894                     i2l1900:
  3914                           
  3915                           ;main.c: 243: INT1IF = 0;
  3916  000894  90F0               	bcf	intcon3,0,c	;volatile
  3917  000896                     i2l1902:
  3918                           
  3919                           ;main.c: 244: }
  3920                           ;main.c: 245: if ((screenMode == 1) && TMR0IF && TMR0IE){
  3921  000896  0459               	decf	_screenMode,w,c
  3922  000898  105A               	iorwf	_screenMode+1,w,c
  3923  00089A  B4D8               	btfsc	status,2,c
  3924  00089C  A4F2               	btfss	intcon,2,c	;volatile
  3925  00089E  D021               	goto	i2l249
  3926  0008A0  AAF2               	btfss	intcon,5,c	;volatile
  3927  0008A2  D01F               	goto	i2l249
  3928                           
  3929                           ;main.c: 246: TMR0IF = 0;
  3930  0008A4  94F2               	bcf	intcon,2,c	;volatile
  3931                           
  3932                           ;main.c: 247: TMR0 = 0;
  3933  0008A6  0E00               	movlw	0
  3934  0008A8  6ED7               	movwf	4055,c	;volatile
  3935  0008AA  0E00               	movlw	0
  3936  0008AC  6ED6               	movwf	4054,c	;volatile
  3937                           
  3938                           ;main.c: 248: opTimer++;
  3939  0008AE  4A44               	infsnz	_opTimer,f,c
  3940  0008B0  2A45               	incf	_opTimer+1,f,c
  3941                           
  3942                           ;main.c: 249: if (opTimer >= 6866){
  3943  0008B2  0ED2               	movlw	210
  3944  0008B4  5C44               	subwf	_opTimer,w,c
  3945  0008B6  0E1A               	movlw	26
  3946  0008B8  5845               	subwfb	_opTimer+1,w,c
  3947  0008BA  A0D8               	btfss	status,0,c
  3948  0008BC  D012               	goto	i2l249
  3949                           
  3950                           ;main.c: 256: opTimer = 0;
  3951  0008BE  0E00               	movlw	0
  3952  0008C0  6E45               	movwf	_opTimer+1,c
  3953  0008C2  0E00               	movlw	0
  3954  0008C4  6E44               	movwf	_opTimer,c
  3955                           
  3956                           ;main.c: 257: screenMode = 0;
  3957  0008C6  0E00               	movlw	0
  3958  0008C8  6E5A               	movwf	_screenMode+1,c
  3959  0008CA  0E00               	movlw	0
  3960  0008CC  6E59               	movwf	_screenMode,c
  3961                           
  3962                           ;main.c: 262: T0CONbits.TMR0ON = 0;
  3963  0008CE  9ED5               	bcf	4053,7,c	;volatile
  3964                           
  3965                           ;main.c: 273: LATC = LATC && 0b11111101;
  3966  0008D0  0E00               	movlw	0
  3967  0008D2  6E12               	movwf	_highISR$422,c
  3968  0008D4  508B               	movf	3979,w,c	;volatile
  3969  0008D6  B4D8               	btfsc	status,2,c
  3970  0008D8  D002               	goto	i2l1922
  3971  0008DA  0E01               	movlw	1
  3972  0008DC  6E12               	movwf	_highISR$422,c
  3973  0008DE                     i2l1922:
  3974  0008DE  C012  FF8B         	movff	_highISR$422,3979	;volatile
  3975  0008E2                     i2l249:
  3976  0008E2  C011  FFF5         	movff	??_highISR+13,tablat
  3977  0008E6  C010  FFF8         	movff	??_highISR+12,tblptru
  3978  0008EA  C00F  FFF7         	movff	??_highISR+11,tblptrh
  3979  0008EE  C00E  FFF6         	movff	??_highISR+10,tblptrl
  3980  0008F2  C00D  FFF4         	movff	??_highISR+9,prodh
  3981  0008F6  C00C  FFF3         	movff	??_highISR+8,prodl
  3982  0008FA  C00B  FFDA         	movff	??_highISR+7,fsr2h
  3983  0008FE  C00A  FFD9         	movff	??_highISR+6,fsr2l
  3984  000902  C009  FFE2         	movff	??_highISR+5,fsr1h
  3985  000906  C008  FFE1         	movff	??_highISR+4,fsr1l
  3986  00090A  C007  FFEA         	movff	??_highISR+3,fsr0h
  3987  00090E  C006  FFE9         	movff	??_highISR+2,fsr0l
  3988  000912  C005  FFFB         	movff	??_highISR+1,pclatu
  3989  000916  C004  FFFA         	movff	??_highISR,pclath
  3990  00091A  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3991  00091C  0011               	retfie		f
  3992  00091E                     __end_of_highISR:
  3993                           	opt stack 0
  3994                           pclatu	equ	0xFFB
  3995                           pclath	equ	0xFFA
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           prodh	equ	0xFF4
  4001                           prodl	equ	0xFF3
  4002                           intcon	equ	0xFF2
  4003                           intcon3	equ	0xFF0
  4004                           postinc0	equ	0xFEE
  4005                           fsr0h	equ	0xFEA
  4006                           fsr0l	equ	0xFE9
  4007                           wreg	equ	0xFE8
  4008                           fsr1h	equ	0xFE2
  4009                           fsr1l	equ	0xFE1
  4010                           bsr	equ	0xFE0
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           postdec2	equ	0xFDD
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _switchMenu *****************
  4019 ;; Defined at:
  4020 ;;		line 204 in file "../main.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  left            1    wreg     unsigned char 
  4023 ;;  right           1    0[COMRAM] unsigned char 
  4024 ;;  key             1    1[COMRAM] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  left            1    2[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        3 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_highISR
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text19
  4050  000A9C                     __ptext19:
  4051                           	opt stack 0
  4052  000A9C                     _switchMenu:
  4053                           	opt stack 25
  4054                           
  4055                           ;incstack = 0
  4056                           ;switchMenu@left stored from wreg
  4057  000A9C  6E03               	movwf	switchMenu@left,c
  4058                           
  4059                           ;main.c: 205: if (key == right){
  4060  000A9E  5001               	movf	switchMenu@right,w,c
  4061  000AA0  1802               	xorwf	switchMenu@key,w,c
  4062  000AA2  A4D8               	btfss	status,2,c
  4063  000AA4  D00E               	goto	i2l1698
  4064                           
  4065                           ;main.c: 206: if (screenMode == 2)
  4066  000AA6  0E02               	movlw	2
  4067  000AA8  1859               	xorwf	_screenMode,w,c
  4068  000AAA  105A               	iorwf	_screenMode+1,w,c
  4069  000AAC  A4D8               	btfss	status,2,c
  4070  000AAE  D005               	goto	i2l1696
  4071                           
  4072                           ;main.c: 207: screenMode = 9;
  4073  000AB0  0E00               	movlw	0
  4074  000AB2  6E5A               	movwf	_screenMode+1,c
  4075  000AB4  0E09               	movlw	9
  4076  000AB6  6E59               	movwf	_screenMode,c
  4077  000AB8  0012               	return	
  4078  000ABA                     i2l1696:
  4079                           
  4080                           ;main.c: 208: else
  4081                           ;main.c: 209: screenMode -= 1;
  4082  000ABA  0659               	decf	_screenMode,f,c
  4083  000ABC  A0D8               	btfss	status,0,c
  4084  000ABE  065A               	decf	_screenMode+1,f,c
  4085                           
  4086                           ;main.c: 210: }
  4087  000AC0  0012               	return	
  4088  000AC2                     i2l1698:
  4089                           
  4090                           ;main.c: 211: else if (key == left){
  4091  000AC2  5003               	movf	switchMenu@left,w,c
  4092  000AC4  1802               	xorwf	switchMenu@key,w,c
  4093  000AC6  A4D8               	btfss	status,2,c
  4094  000AC8  0012               	return	
  4095                           
  4096                           ;main.c: 212: if (screenMode == 9)
  4097  000ACA  0E09               	movlw	9
  4098  000ACC  1859               	xorwf	_screenMode,w,c
  4099  000ACE  105A               	iorwf	_screenMode+1,w,c
  4100  000AD0  A4D8               	btfss	status,2,c
  4101  000AD2  D005               	goto	i2l1704
  4102                           
  4103                           ;main.c: 213: screenMode = 2;
  4104  000AD4  0E00               	movlw	0
  4105  000AD6  6E5A               	movwf	_screenMode+1,c
  4106  000AD8  0E02               	movlw	2
  4107  000ADA  6E59               	movwf	_screenMode,c
  4108  000ADC  0012               	return	
  4109  000ADE                     i2l1704:
  4110                           
  4111                           ;main.c: 214: else
  4112                           ;main.c: 215: screenMode += 1;
  4113  000ADE  4A59               	infsnz	_screenMode,f,c
  4114  000AE0  2A5A               	incf	_screenMode+1,f,c
  4115  000AE2  0012               	return	
  4116  000AE4                     __end_of_switchMenu:
  4117                           	opt stack 0
  4118                           pclatu	equ	0xFFB
  4119                           pclath	equ	0xFFA
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           intcon3	equ	0xFF0
  4128                           postinc0	equ	0xFEE
  4129                           fsr0h	equ	0xFEA
  4130                           fsr0l	equ	0xFE9
  4131                           wreg	equ	0xFE8
  4132                           fsr1h	equ	0xFE2
  4133                           fsr1l	equ	0xFE1
  4134                           bsr	equ	0xFE0
  4135                           indf2	equ	0xFDF
  4136                           postinc2	equ	0xFDE
  4137                           postdec2	equ	0xFDD
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           pclatu	equ	0xFFB
  4142                           pclath	equ	0xFFA
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon	equ	0xFF2
  4150                           intcon3	equ	0xFF0
  4151                           postinc0	equ	0xFEE
  4152                           fsr0h	equ	0xFEA
  4153                           fsr0l	equ	0xFE9
  4154                           wreg	equ	0xFE8
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           bsr	equ	0xFE0
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165                           	psect	rparam
  4166  0000                     pclatu	equ	0xFFB
  4167                           pclath	equ	0xFFA
  4168                           tblptru	equ	0xFF8
  4169                           tblptrh	equ	0xFF7
  4170                           tblptrl	equ	0xFF6
  4171                           tablat	equ	0xFF5
  4172                           prodh	equ	0xFF4
  4173                           prodl	equ	0xFF3
  4174                           intcon	equ	0xFF2
  4175                           intcon3	equ	0xFF0
  4176                           postinc0	equ	0xFEE
  4177                           fsr0h	equ	0xFEA
  4178                           fsr0l	equ	0xFE9
  4179                           wreg	equ	0xFE8
  4180                           fsr1h	equ	0xFE2
  4181                           fsr1l	equ	0xFE1
  4182                           bsr	equ	0xFE0
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           postdec2	equ	0xFDD
  4186                           fsr2h	equ	0xFDA
  4187                           fsr2l	equ	0xFD9
  4188                           status	equ	0xFD8
  4189                           
  4190                           	psect	temp
  4191  00005B                     btemp:
  4192                           	opt stack 0
  4193  00005B                     	ds	1
  4194  0000                     int$flags	set	btemp
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           intcon3	equ	0xFF0
  4205                           postinc0	equ	0xFEE
  4206                           fsr0h	equ	0xFEA
  4207                           fsr0l	equ	0xFE9
  4208                           wreg	equ	0xFE8
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           bsr	equ	0xFE0
  4212                           indf2	equ	0xFDF
  4213                           postinc2	equ	0xFDE
  4214                           postdec2	equ	0xFDD
  4215                           fsr2h	equ	0xFDA
  4216                           fsr2l	equ	0xFD9
  4217                           status	equ	0xFD8


Data Sizes:
    Strings     349
    Constant    35
    Data        2
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56      90
    BANK0           128     17      17
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_21(CODE[23]), STR_20(CODE[23]), STR_19(CODE[21]), STR_18(CODE[17]), 
		 -> STR_17(CODE[21]), STR_16(CODE[17]), STR_15(CODE[21]), STR_14(CODE[17]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[19]), STR_10(CODE[17]), 
		 -> STR_9(CODE[25]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _lowISR in COMRAM

    None.

Critical Paths under _highISR in COMRAM

    _highISR->_switchMenu

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _lowISR in BANK0

    None.

Critical Paths under _highISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowISR in BANK1

    None.

Critical Paths under _highISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowISR in BANK2

    None.

Critical Paths under _highISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowISR in BANK3

    None.

Critical Paths under _highISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowISR in BANK4

    None.

Critical Paths under _highISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowISR in BANK5

    None.

Critical Paths under _highISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowISR in BANK6

    None.

Critical Paths under _highISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowISR in BANK7

    None.

Critical Paths under _highISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowISR in BANK8

    None.

Critical Paths under _highISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowISR in BANK9

    None.

Critical Paths under _highISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowISR in BANK10

    None.

Critical Paths under _highISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowISR in BANK11

    None.

Critical Paths under _highISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowISR in BANK12

    None.

Critical Paths under _highISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowISR in BANK13

    None.

Critical Paths under _highISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowISR in BANK14

    None.

Critical Paths under _highISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowISR in BANK15

    None.

Critical Paths under _highISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5938
                                             14 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    4623
                                             48 COMRAM     8     0      8
                                              0 BANK0     14    14      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                             38 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             36 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             43 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     549
                                             36 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             39 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                             38 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                             36 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     262
                                             37 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                             37 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     503
                                             49 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     395
                                             36 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lowISR                                              17    17      0       0
                                             19 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highISR                                             16    16      0     285
                                              3 COMRAM    16    16      0
                         _switchMenu
 ---------------------------------------------------------------------------------
 (6) _switchMenu                                           3     1      2     216
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _lcdNibble

 _lowISR (ROOT)

 _highISR (ROOT)
   _switchMenu

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     11      11       5       13.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      5A       1       71.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B      34        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Mon Feb 06 16:21:24 2017

                       l30 0C08                         bsr 000FE0        ___wmul@multiplicand 0027  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000  
                      l201 062E                        l210 06DC                        l204 0668  
                      l207 06A2                        l180 04A4                        l195 05B0  
                      l284 01C0                        l198 05F4                        l729 0A44  
                      l739 0B62                        l676 098E                        _GIE 007F97  
             __CFG_CPB$OFF 000000                        _PEN 007E2A               __CFG_CPD$OFF 000000  
                      _SEN 007E28                        _min 0042                        _sec 004A  
                      prod 000FF3                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l2000 0A12                       l2002 0A1A  
                     l2012 0A3A                       l2004 0A1E                       l2020 0B38  
                     l2022 0B40                       l2110 0190                       l2024 0B44  
                     l2202 040C                       l2122 01F8                       l2106 018A  
                     l2060 0BE4                       l2028 0B58                       l2204 041E  
                     l2140 0250                       l2206 0426                       l2142 0256  
                     l2126 0214                       l2128 021A                       l2208 0432  
                     l2170 0302                       l2082 00B8                       l2306 05E8  
                     l2250 04D2                       l2164 02C0                       l2156 028C  
                     l2092 00E6                       l2316 0622                       l2182 0338  
                     l2158 029E                       l2086 00CC                       l2326 065C  
                     l2262 04FE                       l2254 04DC                       l2184 0344  
                     l2192 0372                       l2176 031C                       l2168 02F8  
                     l2088 00DE                       l2336 0696                       l2272 0526  
                     l2280 0548                       l2194 0378                       l2098 0116  
                     l2362 074C                       l2346 06D0                       l2290 0582  
                     l2282 0554                       l2196 03C0                       l2188 035E  
                     l2372 0776                       l2356 070A                       l2268 051C  
                     l2366 0756                       l2358 0716                       l2296 05A6  
                     l2288 0578                       l2378 07CA                       l1962 0C00  
                     l1980 094C                       l1990 0980                       l1982 0950  
                     l1978 0940                       _ADFM 007E07                       _ADON 007E10  
                     STR_1 FFDD                       STR_2 FFEE                       STR_3 FFCC  
                     STR_4 FF66                       STR_5 FF22                       STR_6 FFAA  
                     STR_7 FF88                       STR_8 FFBB                       STR_9 FEA2  
                     u2007 0538                       u2017 0AEA                       u2027 0B1E  
                     u2037 0A66                       _LATA 000F89                       _LATB 000F8A  
                     u2047 0A6E                       _LATC 000F8B                       _LATD 000F8C  
                     u2057 0A8E                       u2067 0A96                       u1560 0BE2  
                     u1555 09CE                       _RBIE 007F93                       _RCEN 007E2B  
                     u1997 04EE                       _TMR0 000FD6                       _main 044E  
                     _keys FE7F                       _numC 0057                       _time 0039  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 005B                       prodh 000FF4  
                     prodl 000FF3                       start 00A6            highISR@keypress 0013  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000000  
         ?_I2C_Master_Init 0032           ?_I2C_Master_Read 0001           ?_I2C_Master_Wait 0001  
         ?_I2C_Master_Stop 0001                      ?_main 0001                      _ACKEN 007E2C  
                    _ACKDT 007E2D                      STR_10 FF77                      STR_11 FEFE  
                    STR_12 FF33                      STR_20 FEBB                      STR_13 FEFE  
                    STR_21 FED2                      STR_14 FF55                      STR_22 FF11  
                    STR_15 FEE9                      STR_16 FF44                      STR_17 FEE9  
                    STR_18 FF99                      STR_19 FEE9            __end_of___lldiv 09A0  
                    _T0CON 000FD5            __end_of___lwdiv 0A4E            __end_of___lwmod 0B6C  
                    i2l249 08E2                      _PORTB 000F81                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
            __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000            __end_of_highISR 091E  
          __end_of_lcdInst 0C32             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
          __end_of_initLCD 0B2A             __CFG_EBTRB$OFF 000000            __end_of_dpowers FE9A  
                    _numAA 0055                      _num9V 0054            __end_of_isdigit 0C08  
                    _putch 0C1A                      main@i 0090                      pclath 000FFA  
                    tablat 000FF5                      status 000FD8             __CFG_PBADEN$ON 000000  
          __initialization 0B6C               __end_of_main 07D6               __end_of_keys FE90  
                   ??_main 008E              __activetblptr 000002          ?_I2C_Master_Start 0001  
        ?_I2C_Master_Write 0026         ??_I2C_Master_Start 0026                     _ADCON0 000FC2  
                   _ADCON1 000FC1         ??_I2C_Master_Write 0028                     ?_putch 0001  
                   _INT1IE 007F83                     _INT1IF 007F80                     _CVRCON 000FB5  
                   i2l1704 0ADE                     i2l1900 0894                     i2l1902 0896  
                   i2l1922 08DE                     i2l1696 0ABA                     i2l1698 0AC2  
                   i2l1892 085A                     i2l1896 086C                     _TMR0IE 007F95  
                   _TMR0IF 007F92                     _SSPADD 000FC8                     _TRISC3 007CA3  
                   _TRISC4 007CA4                     _SSPBUF 000FC9             __CFG_XINST$OFF 000000  
                   ___wmul 0B9E             __CFG_STVREN$ON 000000                  ??___lldiv 002D  
                ??___lwdiv 0029                  ??___lwmod 0030                     _countC 0052  
                   _lowISR 0018                     clear_0 0B8A                  ??_highISR 0004  
                ??_lcdInst 0027                     _printf 00AA                     _runMin 0046  
                   _runSec 0048                  ??_initLCD 0028               __pdataCOMRAM 0059  
                ??_isdigit 0025               __mediumconst FE7E                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8            switchMenu@right 0001  
               __accesstop 0080    __end_of__initialization 0B90              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_putch 0C26         __size_of_lcdNibble 004E  
                  ??_putch 0027                    ?___wmul 0025                    ?_lowISR 0001  
                  ?_printf 0031                    _SSPCON1 000FC6                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7                 _countDrain 0053          __end_of_lcdNibble 0A9C  
                  __Hparam 0000                    __Lparam 0000                    ___lldiv 091E  
          __size_of___wmul 0026                    ___lwdiv 09FC                    ___lwmod 0B2A  
                _CMCONbits 000FB4                    __pcinit 0B6C            __size_of_lowISR 008E  
                  __ramtop 1000                    _highISR 0008                    _lcdInst 0C26  
                  __ptext0 044E                    __ptext1 00AA                    __ptext2 0C1A  
                  __ptext3 0BEA                    __ptext4 0B9E                    __ptext5 0B2A  
                  __ptext6 09FC                    __ptext7 0AE4                    __ptext8 0C26  
                  __ptext9 0A4E            __size_of_printf 03A4                  _T0CONbits 000FD5  
                  _countAA 0051                    _count9V 0050                    _initLCD 0AE4  
        __end_of_hexpowers FEA2                    _dpowers FE90                    _isdigit 0BEA  
                  _opTimer 0044                    _numBats 0056   __size_of_I2C_Master_Init 005C  
 __size_of_I2C_Master_Read 0026   __size_of_I2C_Master_Wait 0012   __size_of_I2C_Master_Stop 0008  
           __pintcode_body 07D6       end_of_initialization 0B90              __Lmediumconst FE7E  
                  int_func 07D6                 _screenMode 0059  __size_of_I2C_Master_Start 0008  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0029            ___lldiv@counter 0031  
                  printf@c 008D                    printf@f 0031           I2C_Master_Init@c 0032  
         I2C_Master_Read@a 0026                    postdec2 000FDD                 _solOnTimer 004E  
                  postinc0 000FEE                    postinc2 000FDE                printf@width 008B  
               _switchMenu 0A9C             __end_of___wmul 0BC4              __pidataCOMRAM 0C4C  
           __end_of_lowISR 00A6             __end_of_printf 044E        start_initialization 0B6C  
        ??_I2C_Master_Init 0080          ??_I2C_Master_Read 0026          ??_I2C_Master_Wait 0025  
        ??_I2C_Master_Stop 0026                   ??___wmul 0029           __CFG_LPT1OSC$OFF 000000  
                 ??_lowISR 0014             switchMenu@left 0003                   ??_printf 0080  
              __pbssCOMRAM 0039              __pcstackBANK0 0080           _I2C_Master_Start 0C44  
         _I2C_Master_Write 0C32           ___lwdiv@dividend 0025          __CFG_CCP2MX$PORTC 000000  
              ?_switchMenu 0001                  __pintcode 0008              __pmediumconst FE7E  
                _lcdNibble 0A4E                   ?___lldiv 0025                   ?___lwdiv 0025  
              _highISR$422 0012                   ?___lwmod 002C                __pintcodelo 0018  
                _doneTimer 0040                   ?_highISR 0001                   ?_lcdInst 0001  
                 ?_initLCD 0001                   ?_isdigit 0001                  _hexpowers FE9A  
         ___lwdiv@quotient 002A             __size_of_putch 000C             ___wmul@product 0029  
                 _LATDbits 000F8C           __CFG_WDTPS$32768 000000                 ?_lcdNibble 0001  
               _ADCON0bits 000FC2                  main@i_394 008F          ___wmul@multiplier 0025  
            lcdNibble@data 0026                 printf@flag 008A              lcdNibble@temp 0025  
               printf@prec 0087        __size_of_switchMenu 0048        I2C_Master_Read@temp 0027  
                 __Hrparam 0000                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
            switchMenu@key 0002           __size_of___lldiv 0082           __size_of___lwdiv 0052  
         __size_of___lwmod 0042                _isdigit$674 0026           __size_of_highISR 0916  
         __size_of_lcdInst 000C            _I2C_Master_Init 09A0            _I2C_Master_Read 0BC4  
         __size_of_initLCD 0046            _I2C_Master_Wait 0C08            _I2C_Master_Stop 0C3C  
         __size_of_isdigit 001E            ___lwdiv@divisor 0027            ___lwdiv@counter 0029  
                 __ptext10 0C32                   __ptext11 0C3C                   __ptext12 0C44  
                 __ptext13 0BC4                   __ptext14 0C08                   __ptext15 09A0  
                 __ptext16 091E                   __ptext19 0A9C              __size_of_main 0388  
                 _numDrain 0058                ??_lcdNibble 0025                   int$flags 005B  
                printf@idx 0084                  printf@val 0088                  putch@data 0027  
 __end_of_I2C_Master_Start 0C4C   __end_of_I2C_Master_Write 0C3C                 _INTCONbits 000FF2  
                 isdigit@c 0027                   intlevel1 0000                   intlevel2 0000  
         ___lwmod@dividend 002C           ___lldiv@dividend 0025               ??_switchMenu 0003  
              _solOffTimer 004C                   printf@ap 0085    __end_of_I2C_Master_Init 09FC  
  __end_of_I2C_Master_Read 0BEA    __end_of_I2C_Master_Wait 0C1A    __end_of_I2C_Master_Stop 0C44  
              lcdInst@data 0027           ___lldiv@quotient 002D          I2C_Master_Write@d 0026  
          ___lwmod@divisor 002E            ___lwmod@counter 0030         __end_of_switchMenu 0AE4  
